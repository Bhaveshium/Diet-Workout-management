/*      */ package gymrat;
/*      */ 
/*      */ import java.awt.Color;
/*      */ import java.awt.Cursor;
/*      */ import java.awt.Dimension;
/*      */ import java.awt.EventQueue;
/*      */ import java.awt.Font;
/*      */ import java.awt.LayoutManager;
/*      */ import java.awt.Toolkit;
/*      */ import java.awt.event.ActionEvent;
/*      */ import java.awt.event.ActionListener;
/*      */ import java.awt.event.InputMethodEvent;
/*      */ import java.awt.event.InputMethodListener;
/*      */ import java.awt.event.MouseAdapter;
/*      */ import java.awt.event.MouseEvent;
/*      */ import java.io.IOException;
/*      */ import java.sql.Connection;
/*      */ import java.sql.DriverManager;
/*      */ import java.sql.ResultSet;
/*      */ import java.sql.Statement;
/*      */ import java.text.DecimalFormat;
/*      */ import java.util.Random;
/*      */ import java.util.logging.Level;
/*      */ import java.util.logging.Logger;
/*      */ import javax.swing.BorderFactory;
/*      */ import javax.swing.GroupLayout;
/*      */ import javax.swing.ImageIcon;
/*      */ import javax.swing.JButton;
/*      */ import javax.swing.JFrame;
/*      */ import javax.swing.JLabel;
/*      */ import javax.swing.JOptionPane;
/*      */ import javax.swing.JPanel;
/*      */ import javax.swing.JScrollPane;
/*      */ import javax.swing.JTextArea;
/*      */ import javax.swing.JTextField;
/*      */ import javax.swing.LayoutStyle;
/*      */ import javax.swing.UIManager;
/*      */ import javax.swing.UnsupportedLookAndFeelException;
/*      */ import javax.swing.border.Border;
/*      */ import javax.swing.border.SoftBevelBorder;
/*      */ import javax.swing.text.Highlighter;
/*      */ import org.netbeans.lib.awtextra.AbsoluteConstraints;
/*      */ import org.netbeans.lib.awtextra.AbsoluteLayout;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class main
/*      */   extends JFrame
/*      */ {
/*      */   private JButton Farmerswalkbtn;
/*      */   private JButton Knellingcabellatpulldobtnwn;
/*      */   private JButton Longangledumbbellrowbtn;
/*      */   private JButton aboutbtn;
/*      */   private JLabel aboutlogolbl;
/*      */   private JPanel aboutpnl;
/*      */   private JTextArea aboutta;
/*      */   private JButton absbackbtn;
/*      */   private JLabel absbglbl;
/*      */   private JButton absbtn;
/*      */   private JPanel abspnl;
/*      */   private JLabel accbglbl;
/*      */   private JButton accountbtn;
/*      */   private JPanel accountpnl;
/*      */   private JLabel agelbl;
/*      */   private JTextField agetf;
/*      */   private JTextField alastperformedtf;
/*      */   private JButton backbackbtn;
/*      */   private JButton backbtn;
/*      */   private JPanel backpnl;
/*      */   private JLabel backworklbl;
/*      */   private JButton barbellhighrow;
/*      */   private JLabel barbellhighrowlbl1;
/*      */   private JButton bentrowbtn;
/*      */   private JLabel bgiconlbl;
/*      */   private JLabel bglbl;
/*      */   private JLabel bicepbglbl;
/*      */   private JButton bicepsbackbtn;
/*      */   private JButton bicepsbtn;
/*      */   private JPanel bicepspnl;
/*      */   private JTextField bilastperformedtf;
/*      */   private JLabel bmilbl;
/*      */   private JTextField bmitf;
/*      */   private JButton bulgariansplitsquadbtn;
/*      */   private JLabel bulgariansplitsquadlbl;
/*      */   private JButton cableflybtn;
/*      */   private JButton calvesbackbtn;
/*      */   private JLabel calvesbglbl;
/*      */   private JButton calvesbtn;
/*      */   private JTextField calveslastperformedtf;
/*      */   private JPanel calvespnl;
/*      */   private JButton calvesraisesbtn;
/*      */   private JLabel calvesraiseslbl;
/*      */   private JButton chestbackbtn;
/*      */   private JLabel chestbglbl;
/*      */   private JButton chestbtn;
/*      */   private JButton chestdipsbtn;
/*      */   private JPanel chestpnl;
/*      */   private JButton chinupbtn;
/*      */   private JTextField clastperformedtf;
/*      */   private JLabel clavesworkoutlbl;
/*      */   private JButton closegrip;
/*      */   private JLabel closegriplbl;
/*      */   private JButton concurls;
/*      */   private JLabel dateloginlbl;
/*      */   private JButton deadliftbtn;
/*      */   private JPanel defaultpnl;
/*      */   private JButton deletebtn;
/*      */   private JPanel dietbarpnl;
/*      */   private JButton dietbtn;
/*      */   private JPanel dietpnl;
/*      */   private JButton dipsbtn;
/*      */   private JLabel dipslbl;
/*      */   private JButton dubbellkickbackbtn;
/*      */   private JLabel dubbellkickbacklbl;
/*      */   private JButton dumbellpressbtn;
/*      */   private JButton dumbellrowbtn;
/*      */   private JButton editbtn1;
/*      */   private JLabel facepulllbl;
/*      */   private JButton facepullsbtn;
/*      */   private JTextField flastperformedtf;
/*      */   private JButton forearmbackbtn;
/*      */   private JLabel forearmbglbl;
/*      */   private JButton forearmsbtn;
/*      */   private JPanel forearmspnl;
/*      */   private JButton frenchcurlbtn;
/*      */   private JLabel frenchcurllbl;
/*      */   private JButton frontraisesbtn;
/*      */   private JLabel frontraiseslbl;
/*      */   private JButton frontsquatbtn;
/*      */   private JLabel frontsquatlbl;
/*      */   private JLabel genderlbl;
/*      */   private JTextField gendertf;
/*      */   private JButton hamsbackbtn;
/*      */   private JPanel hamspnl;
/*      */   private JButton hamstrings;
/*      */   private JLabel hamstringsbglbl;
/*      */   private JLabel heightlbl;
/*      */   private JTextField heighttf;
/*      */   private JTextField hlastperformedtf;
/*      */   private JPanel hmpnl;
/*      */   private JButton homebtn;
/*      */   private JPanel homepnl;
/*      */   private JLabel humanbodybg;
/*      */   private JLabel inclinedubbellhighrow;
/*      */   private JLabel inclinedubbellhighrowlbl;
/*      */   private JButton inclinedumbbellhighrowbtn;
/*      */   private JButton inclinedumbbtn;
/*      */   private JButton inclinepressbtn;
/*      */   private JButton jButton1;
/*      */   private JButton jButton10;
/*      */   private JLabel jLabel1;
/*      */   private JLabel jLabel10;
/*      */   private JLabel jLabel100;
/*      */   private JLabel jLabel101;
/*      */   private JLabel jLabel102;
/*      */   private JLabel jLabel103;
/*      */   private JLabel jLabel104;
/*      */   private JLabel jLabel105;
/*      */   private JLabel jLabel106;
/*      */   private JLabel jLabel107;
/*      */   private JLabel jLabel108;
/*      */   private JLabel jLabel109;
/*      */   private JLabel jLabel11;
/*      */   private JLabel jLabel110;
/*      */   private JLabel jLabel111;
/*      */   private JLabel jLabel112;
/*      */   private JLabel jLabel113;
/*      */   private JLabel jLabel114;
/*      */   private JLabel jLabel115;
/*      */   private JLabel jLabel116;
/*      */   private JLabel jLabel117;
/*      */   private JLabel jLabel118;
/*      */   private JLabel jLabel119;
/*      */   private JLabel jLabel12;
/*      */   private JLabel jLabel120;
/*      */   private JLabel jLabel121;
/*      */   private JLabel jLabel122;
/*      */   private JLabel jLabel123;
/*      */   private JLabel jLabel124;
/*      */   private JLabel jLabel125;
/*      */   private JLabel jLabel126;
/*      */   private JLabel jLabel127;
/*      */   private JLabel jLabel128;
/*      */   private JLabel jLabel13;
/*      */   private JLabel jLabel14;
/*      */   private JLabel jLabel15;
/*      */   private JLabel jLabel16;
/*      */   private JLabel jLabel17;
/*      */   private JLabel jLabel18;
/*      */   private JLabel jLabel19;
/*      */   private JLabel jLabel2;
/*      */   private JLabel jLabel20;
/*      */   private JLabel jLabel21;
/*      */   private JLabel jLabel22;
/*      */   private JLabel jLabel23;
/*      */   private JLabel jLabel24;
/*      */   private JLabel jLabel25;
/*      */   private JLabel jLabel26;
/*      */   private JLabel jLabel27;
/*      */   private JLabel jLabel28;
/*      */   private JLabel jLabel29;
/*      */   private JLabel jLabel3;
/*      */   private JLabel jLabel30;
/*      */   private JLabel jLabel31;
/*      */   private JLabel jLabel32;
/*      */   private JLabel jLabel33;
/*      */   private JLabel jLabel34;
/*      */   private JLabel jLabel35;
/*      */   private JLabel jLabel36;
/*      */   private JLabel jLabel37;
/*      */   private JLabel jLabel38;
/*      */   private JLabel jLabel39;
/*      */   private JLabel jLabel4;
/*      */   private JLabel jLabel40;
/*      */   private JLabel jLabel41;
/*      */   private JLabel jLabel42;
/*      */   private JLabel jLabel43;
/*      */   private JLabel jLabel44;
/*      */   private JLabel jLabel45;
/*      */   private JLabel jLabel46;
/*      */   private JLabel jLabel47;
/*      */   private JLabel jLabel48;
/*      */   private JLabel jLabel49;
/*      */   private JLabel jLabel5;
/*      */   private JLabel jLabel50;
/*      */   private JLabel jLabel51;
/*      */   private JLabel jLabel52;
/*      */   private JLabel jLabel53;
/*      */   private JLabel jLabel54;
/*      */   private JLabel jLabel55;
/*      */   private JLabel jLabel56;
/*      */   private JLabel jLabel57;
/*      */   private JLabel jLabel58;
/*      */   private JLabel jLabel59;
/*      */   private JLabel jLabel6;
/*      */   private JLabel jLabel60;
/*      */   private JLabel jLabel61;
/*      */   private JLabel jLabel62;
/*      */   private JLabel jLabel63;
/*      */   private JLabel jLabel64;
/*      */   private JLabel jLabel65;
/*      */   private JLabel jLabel66;
/*      */   private JLabel jLabel67;
/*      */   private JLabel jLabel68;
/*      */   private JLabel jLabel69;
/*      */   private JLabel jLabel7;
/*      */   private JLabel jLabel70;
/*      */   private JLabel jLabel71;
/*      */   private JLabel jLabel72;
/*      */   private JLabel jLabel73;
/*      */   private JLabel jLabel74;
/*      */   private JLabel jLabel75;
/*      */   private JLabel jLabel76;
/*      */   private JLabel jLabel77;
/*      */   private JLabel jLabel78;
/*      */   private JLabel jLabel79;
/*      */   private JLabel jLabel8;
/*      */   private JLabel jLabel80;
/*      */   private JLabel jLabel81;
/*      */   private JLabel jLabel82;
/*      */   private JLabel jLabel83;
/*      */   private JLabel jLabel84;
/*      */   private JLabel jLabel85;
/*      */   private JLabel jLabel86;
/*      */   private JLabel jLabel87;
/*      */   private JLabel jLabel88;
/*      */   private JLabel jLabel89;
/*      */   private JLabel jLabel9;
/*      */   private JLabel jLabel90;
/*      */   private JLabel jLabel91;
/*      */   private JLabel jLabel92;
/*      */   private JLabel jLabel93;
/*      */   private JLabel jLabel94;
/*      */   private JLabel jLabel95;
/*      */   private JLabel jLabel96;
/*      */   private JLabel jLabel97;
/*      */   private JLabel jLabel98;
/*      */   private JLabel jLabel99;
/*      */   private JScrollPane jScrollPane1;
/*      */   private JButton jackknivesbtn;
/*      */   private JLabel jackkniveslbl;
/*      */   private JButton landminebtn;
/*      */   private JButton lankbtn;
/*      */   private JLabel lastloginlbl;
/*      */   private JTextField lastperformedtf;
/*      */   private JLabel lastworklbl;
/*      */   private JButton latpulldownbtn;
/*      */   private JButton legextensionbtn;
/*      */   private JLabel legextensionlbl;
/*      */   private JButton logoutlbl;
/*      */   private JLabel longangledubbellrowlbl;
/*      */   private JButton longcrunchesbtn;
/*      */   private JButton machinepressbtn;
/*      */   private JLabel machinepresslbl;
/*      */   private JLabel namelbl;
/*      */   private JTextField nametf;
/*      */   private JTextField phntf;
/*      */   private JLabel phonenumlbl;
/*      */   private JLabel planklbl;
/*      */   private JButton pullupsbtn;
/*      */   private JTextField qlastperformedtf;
/*      */   private JButton quadsbackbtn;
/*      */   private JLabel quadsbglbl;
/*      */   private JButton quadsbtn;
/*      */   private JPanel quadspnl;
/*      */   private JLabel quadsworkoutlbl;
/*      */   private JButton revercegripbtn;
/*      */   private JButton reversebarbtn;
/*      */   private JLabel reversegriplbl;
/*      */   private JButton seatedrowbtn;
/*      */   private JTextField setworktf;
/*      */   private JButton shoulderbackbtn;
/*      */   private JPanel shoulderpnl;
/*      */   private JLabel shouldersbglbl;
/*      */   private JButton shouldersbtn;
/*      */   private JLabel shouldertitlelbl;
/*      */   private JPanel sidebarpnl;
/*      */   private JButton siitedlegpushbtn;
/*      */   private JButton skullcrusherbtn;
/*      */   private JLabel skullcrusherlbl;
/*      */   private JTextField slastperformedtf;
/*      */   private JButton squatsbtn;
/*      */   private JLabel squatslbl;
/*      */   private JButton standinghamstringsbtn;
/*      */   private JButton stifflegliftbtn;
/*      */   private JButton tbarrowbtn;
/*      */   private JTextField tlastperformedtf;
/*      */   private JButton triceppushdownbtn;
/*      */   private JButton tricepsbackbtn;
/*      */   private JLabel tricepsbglbl;
/*      */   private JButton tricepsbtn;
/*      */   private JPanel tricepspnl;
/*      */   private JLabel tricepstitlelbl;
/*      */   private JLabel vsitupslbl;
/*      */   private JButton weightedskydiverbtn;
/*      */   private JButton weightgainbtn;
/*      */   private JPanel weightgainpnl;
/*      */   private JLabel weightlbl;
/*      */   private JLabel weightlossbglbl;
/*      */   private JButton weightlossbtn;
/*      */   private JPanel weightlosspnl;
/*      */   private JPanel weightmainpnl;
/*      */   private JButton weightmaintainbtn;
/*      */   private JTextField weighttf;
/*      */   private JLabel welcomemsglbl;
/*      */   private JLabel wlbglbl;
/*      */   private JLabel wlcquotelbl;
/*      */   private JScrollPane wltip1scrl;
/*      */   private JScrollPane wltip2scrl;
/*      */   private JScrollPane wltip3scrl;
/*      */   private JScrollPane wltip4scrl;
/*      */   private JScrollPane wltip5scrl;
/*      */   private JScrollPane wltip6scrl;
/*      */   private JScrollPane wltip7scrl;
/*      */   private JScrollPane wltip8scrl;
/*      */   private JScrollPane wmtip1scrl;
/*      */   private JScrollPane wmtip1scrl1;
/*      */   private JTextArea wmtip1tf;
/*      */   private JTextArea wmtip1tf1;
/*      */   private JTextArea wmtip1tf2;
/*      */   private JScrollPane wmtip2scrl;
/*      */   private JScrollPane wmtip2scrl1;
/*      */   private JTextArea wmtip2tf;
/*      */   private JTextArea wmtip2tf1;
/*      */   private JTextArea wmtip2tf2;
/*      */   private JScrollPane wmtip3scrl;
/*      */   private JScrollPane wmtip3scrl1;
/*      */   private JTextArea wmtip3tf;
/*      */   private JTextArea wmtip3tf1;
/*      */   private JTextArea wmtip3tf2;
/*      */   private JScrollPane wmtip4scrl;
/*      */   private JScrollPane wmtip4scrl1;
/*      */   private JTextArea wmtip4tf;
/*      */   private JTextArea wmtip4tf1;
/*      */   private JTextArea wmtip4tf2;
/*      */   private JScrollPane wmtip5scrl;
/*      */   private JScrollPane wmtip5scrl1;
/*      */   private JTextArea wmtip5tf;
/*      */   private JTextArea wmtip5tf1;
/*      */   private JTextArea wmtip5tf2;
/*      */   private JScrollPane wmtip6scrl;
/*      */   private JScrollPane wmtip6scrl1;
/*      */   private JTextArea wmtip6tf;
/*      */   private JTextArea wmtip6tf1;
/*      */   private JTextArea wmtip6tf2;
/*      */   private JScrollPane wmtip7scrl;
/*      */   private JScrollPane wmtip7scrl1;
/*      */   private JTextArea wmtip7tf;
/*      */   private JTextArea wmtip7tf1;
/*      */   private JTextArea wmtip7tf2;
/*      */   private JScrollPane wmtip8scrl;
/*      */   private JScrollPane wmtip8scrl1;
/*      */   private JTextArea wmtip8tf;
/*      */   private JTextArea wmtip8tf1;
/*      */   private JTextArea wmtip8tf2;
/*      */   private JButton workoutbtn;
/*      */   private JPanel workoutpnl;
/*      */   private String name;
/*      */   private int num;
/*      */   
/*      */   public main() {
/* 5585 */     this.num = 100; initComponents(); setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("biceps.jpg"))); } public main(String user) { this.num = 100;
/*      */     initComponents();
/*      */     this.name = user;
/*      */     this.welcomemsglbl.setText("Hello " + user);
/*      */     setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("biceps.jpg")));
/*      */     this.homepnl.setVisible(true);
/*      */     this.accountpnl.setVisible(false);
/*      */     this.dietpnl.setVisible(false);
/*      */     this.aboutpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from customer where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         this.dateloginlbl.setText(rs.getString(8)); 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     }  }
/*      */ 
/*      */   
/*      */   private void initComponents() {
/*      */     this.sidebarpnl = new JPanel();
/*      */     this.homebtn = new JButton();
/*      */     this.accountbtn = new JButton();
/*      */     this.dietbtn = new JButton();
/*      */     this.workoutbtn = new JButton();
/*      */     this.aboutbtn = new JButton();
/*      */     this.logoutlbl = new JButton();
/*      */     this.defaultpnl = new JPanel();
/*      */     this.homepnl = new JPanel();
/*      */     this.welcomemsglbl = new JLabel();
/*      */     this.wlcquotelbl = new JLabel();
/*      */     this.lastloginlbl = new JLabel();
/*      */     this.dateloginlbl = new JLabel();
/*      */     this.bglbl = new JLabel();
/*      */     this.dietpnl = new JPanel();
/*      */     this.dietbarpnl = new JPanel();
/*      */     this.weightlossbtn = new JButton();
/*      */     this.weightmaintainbtn = new JButton();
/*      */     this.weightgainbtn = new JButton();
/*      */     this.weightmainpnl = new JPanel();
/*      */     this.jLabel48 = new JLabel();
/*      */     this.jLabel52 = new JLabel();
/*      */     this.jLabel46 = new JLabel();
/*      */     this.jLabel45 = new JLabel();
/*      */     this.jLabel40 = new JLabel();
/*      */     this.jLabel55 = new JLabel();
/*      */     this.jLabel63 = new JLabel();
/*      */     this.jLabel60 = new JLabel();
/*      */     this.jLabel62 = new JLabel();
/*      */     this.jLabel44 = new JLabel();
/*      */     this.jLabel64 = new JLabel();
/*      */     this.jLabel43 = new JLabel();
/*      */     this.jLabel47 = new JLabel();
/*      */     this.jLabel68 = new JLabel();
/*      */     this.jLabel69 = new JLabel();
/*      */     this.jLabel39 = new JLabel();
/*      */     this.jLabel38 = new JLabel();
/*      */     this.jLabel54 = new JLabel();
/*      */     this.jLabel42 = new JLabel();
/*      */     this.jLabel67 = new JLabel();
/*      */     this.jLabel58 = new JLabel();
/*      */     this.jLabel53 = new JLabel();
/*      */     this.jLabel57 = new JLabel();
/*      */     this.jLabel37 = new JLabel();
/*      */     this.jLabel61 = new JLabel();
/*      */     this.jLabel66 = new JLabel();
/*      */     this.jLabel51 = new JLabel();
/*      */     this.jLabel59 = new JLabel();
/*      */     this.jLabel56 = new JLabel();
/*      */     this.jLabel65 = new JLabel();
/*      */     this.jLabel113 = new JLabel();
/*      */     this.wmtip1scrl = new JScrollPane();
/*      */     this.wmtip1tf = new JTextArea();
/*      */     this.wmtip2scrl = new JScrollPane();
/*      */     this.wmtip2tf = new JTextArea();
/*      */     this.wmtip3scrl = new JScrollPane();
/*      */     this.wmtip3tf = new JTextArea();
/*      */     this.wmtip4scrl = new JScrollPane();
/*      */     this.wmtip4tf = new JTextArea();
/*      */     this.wmtip5scrl = new JScrollPane();
/*      */     this.wmtip5tf = new JTextArea();
/*      */     this.wmtip6scrl = new JScrollPane();
/*      */     this.wmtip6tf = new JTextArea();
/*      */     this.wmtip7scrl = new JScrollPane();
/*      */     this.wmtip7tf = new JTextArea();
/*      */     this.wmtip8scrl = new JScrollPane();
/*      */     this.wmtip8tf = new JTextArea();
/*      */     this.wlbglbl = new JLabel();
/*      */     this.weightgainpnl = new JPanel();
/*      */     this.jLabel3 = new JLabel();
/*      */     this.jLabel41 = new JLabel();
/*      */     this.jLabel49 = new JLabel();
/*      */     this.jLabel50 = new JLabel();
/*      */     this.jLabel70 = new JLabel();
/*      */     this.jLabel71 = new JLabel();
/*      */     this.jLabel72 = new JLabel();
/*      */     this.jLabel73 = new JLabel();
/*      */     this.jLabel74 = new JLabel();
/*      */     this.jLabel75 = new JLabel();
/*      */     this.jLabel76 = new JLabel();
/*      */     this.jLabel77 = new JLabel();
/*      */     this.jLabel78 = new JLabel();
/*      */     this.jLabel80 = new JLabel();
/*      */     this.jLabel81 = new JLabel();
/*      */     this.jLabel82 = new JLabel();
/*      */     this.jLabel83 = new JLabel();
/*      */     this.jLabel84 = new JLabel();
/*      */     this.jLabel86 = new JLabel();
/*      */     this.jLabel87 = new JLabel();
/*      */     this.jLabel88 = new JLabel();
/*      */     this.jLabel89 = new JLabel();
/*      */     this.jLabel90 = new JLabel();
/*      */     this.jLabel91 = new JLabel();
/*      */     this.jLabel92 = new JLabel();
/*      */     this.jLabel93 = new JLabel();
/*      */     this.jLabel94 = new JLabel();
/*      */     this.jLabel95 = new JLabel();
/*      */     this.jLabel96 = new JLabel();
/*      */     this.jLabel97 = new JLabel();
/*      */     this.jLabel98 = new JLabel();
/*      */     this.jLabel99 = new JLabel();
/*      */     this.wmtip8scrl1 = new JScrollPane();
/*      */     this.wmtip8tf1 = new JTextArea();
/*      */     this.wmtip7scrl1 = new JScrollPane();
/*      */     this.wmtip7tf1 = new JTextArea();
/*      */     this.wmtip6scrl1 = new JScrollPane();
/*      */     this.wmtip6tf1 = new JTextArea();
/*      */     this.wmtip5scrl1 = new JScrollPane();
/*      */     this.wmtip5tf1 = new JTextArea();
/*      */     this.wmtip4scrl1 = new JScrollPane();
/*      */     this.wmtip4tf1 = new JTextArea();
/*      */     this.wmtip3scrl1 = new JScrollPane();
/*      */     this.wmtip3tf1 = new JTextArea();
/*      */     this.wmtip2scrl1 = new JScrollPane();
/*      */     this.wmtip2tf1 = new JTextArea();
/*      */     this.wmtip1scrl1 = new JScrollPane();
/*      */     this.wmtip1tf1 = new JTextArea();
/*      */     this.jLabel115 = new JLabel();
/*      */     this.bgiconlbl = new JLabel();
/*      */     this.weightlosspnl = new JPanel();
/*      */     this.jLabel1 = new JLabel();
/*      */     this.jLabel4 = new JLabel();
/*      */     this.jLabel5 = new JLabel();
/*      */     this.jLabel6 = new JLabel();
/*      */     this.jLabel7 = new JLabel();
/*      */     this.jLabel8 = new JLabel();
/*      */     this.jLabel9 = new JLabel();
/*      */     this.jLabel10 = new JLabel();
/*      */     this.jLabel11 = new JLabel();
/*      */     this.jLabel12 = new JLabel();
/*      */     this.jLabel13 = new JLabel();
/*      */     this.jLabel14 = new JLabel();
/*      */     this.jLabel15 = new JLabel();
/*      */     this.jLabel16 = new JLabel();
/*      */     this.jLabel17 = new JLabel();
/*      */     this.jLabel18 = new JLabel();
/*      */     this.jLabel19 = new JLabel();
/*      */     this.jLabel20 = new JLabel();
/*      */     this.jLabel21 = new JLabel();
/*      */     this.jLabel22 = new JLabel();
/*      */     this.jLabel23 = new JLabel();
/*      */     this.jLabel24 = new JLabel();
/*      */     this.jLabel25 = new JLabel();
/*      */     this.jLabel26 = new JLabel();
/*      */     this.jLabel27 = new JLabel();
/*      */     this.jLabel28 = new JLabel();
/*      */     this.jLabel29 = new JLabel();
/*      */     this.jLabel30 = new JLabel();
/*      */     this.jLabel31 = new JLabel();
/*      */     this.jLabel32 = new JLabel();
/*      */     this.jLabel33 = new JLabel();
/*      */     this.jLabel34 = new JLabel();
/*      */     this.jLabel35 = new JLabel();
/*      */     this.wltip1scrl = new JScrollPane();
/*      */     this.wmtip1tf2 = new JTextArea();
/*      */     this.wltip2scrl = new JScrollPane();
/*      */     this.wmtip2tf2 = new JTextArea();
/*      */     this.wltip3scrl = new JScrollPane();
/*      */     this.wmtip3tf2 = new JTextArea();
/*      */     this.wltip4scrl = new JScrollPane();
/*      */     this.wmtip4tf2 = new JTextArea();
/*      */     this.wltip5scrl = new JScrollPane();
/*      */     this.wmtip5tf2 = new JTextArea();
/*      */     this.wltip6scrl = new JScrollPane();
/*      */     this.wmtip6tf2 = new JTextArea();
/*      */     this.wltip7scrl = new JScrollPane();
/*      */     this.wmtip7tf2 = new JTextArea();
/*      */     this.wltip8scrl = new JScrollPane();
/*      */     this.wmtip8tf2 = new JTextArea();
/*      */     this.jLabel128 = new JLabel();
/*      */     this.weightlossbglbl = new JLabel();
/*      */     this.workoutpnl = new JPanel();
/*      */     this.hmpnl = new JPanel();
/*      */     this.chestbtn = new JButton();
/*      */     this.tricepsbtn = new JButton();
/*      */     this.absbtn = new JButton();
/*      */     this.bicepsbtn = new JButton();
/*      */     this.shouldersbtn = new JButton();
/*      */     this.forearmsbtn = new JButton();
/*      */     this.quadsbtn = new JButton();
/*      */     this.backbtn = new JButton();
/*      */     this.hamstrings = new JButton();
/*      */     this.calvesbtn = new JButton();
/*      */     this.lastworklbl = new JLabel();
/*      */     this.setworktf = new JTextField();
/*      */     this.humanbodybg = new JLabel();
/*      */     this.backpnl = new JPanel();
/*      */     this.backbackbtn = new JButton();
/*      */     this.jLabel107 = new JLabel();
/*      */     this.jLabel117 = new JLabel();
/*      */     this.dumbellrowbtn = new JButton();
/*      */     this.pullupsbtn = new JButton();
/*      */     this.jLabel118 = new JLabel();
/*      */     this.deadliftbtn = new JButton();
/*      */     this.jLabel119 = new JLabel();
/*      */     this.seatedrowbtn = new JButton();
/*      */     this.jLabel120 = new JLabel();
/*      */     this.latpulldownbtn = new JButton();
/*      */     this.jLabel121 = new JLabel();
/*      */     this.tbarrowbtn = new JButton();
/*      */     this.jLabel122 = new JLabel();
/*      */     this.bentrowbtn = new JButton();
/*      */     this.jLabel123 = new JLabel();
/*      */     this.lastperformedtf = new JTextField();
/*      */     this.backworklbl = new JLabel();
/*      */     this.chestpnl = new JPanel();
/*      */     this.chestbackbtn = new JButton();
/*      */     this.jLabel109 = new JLabel();
/*      */     this.landminebtn = new JButton();
/*      */     this.jLabel85 = new JLabel();
/*      */     this.chestdipsbtn = new JButton();
/*      */     this.jLabel124 = new JLabel();
/*      */     this.cableflybtn = new JButton();
/*      */     this.jLabel125 = new JLabel();
/*      */     this.dumbellpressbtn = new JButton();
/*      */     this.jLabel126 = new JLabel();
/*      */     this.inclinepressbtn = new JButton();
/*      */     this.jLabel127 = new JLabel();
/*      */     this.clastperformedtf = new JTextField();
/*      */     this.chestbglbl = new JLabel();
/*      */     this.bicepspnl = new JPanel();
/*      */     this.bicepsbackbtn = new JButton();
/*      */     this.jLabel108 = new JLabel();
/*      */     this.bilastperformedtf = new JTextField();
/*      */     this.chinupbtn = new JButton();
/*      */     this.jLabel2 = new JLabel();
/*      */     this.concurls = new JButton();
/*      */     this.jLabel36 = new JLabel();
/*      */     this.inclinedumbbtn = new JButton();
/*      */     this.jLabel79 = new JLabel();
/*      */     this.reversebarbtn = new JButton();
/*      */     this.jLabel100 = new JLabel();
/*      */     this.bicepbglbl = new JLabel();
/*      */     this.tricepspnl = new JPanel();
/*      */     this.tricepsbackbtn = new JButton();
/*      */     this.tricepstitlelbl = new JLabel();
/*      */     this.closegrip = new JButton();
/*      */     this.closegriplbl = new JLabel();
/*      */     this.dipsbtn = new JButton();
/*      */     this.dipslbl = new JLabel();
/*      */     this.dubbellkickbackbtn = new JButton();
/*      */     this.dubbellkickbacklbl = new JLabel();
/*      */     this.frenchcurlbtn = new JButton();
/*      */     this.frenchcurllbl = new JLabel();
/*      */     this.revercegripbtn = new JButton();
/*      */     this.reversegriplbl = new JLabel();
/*      */     this.skullcrusherbtn = new JButton();
/*      */     this.skullcrusherlbl = new JLabel();
/*      */     this.triceppushdownbtn = new JButton();
/*      */     this.jLabel110 = new JLabel();
/*      */     this.tlastperformedtf = new JTextField();
/*      */     this.tricepsbglbl = new JLabel();
/*      */     this.shoulderpnl = new JPanel();
/*      */     this.shoulderbackbtn = new JButton();
/*      */     this.shouldertitlelbl = new JLabel();
/*      */     this.barbellhighrow = new JButton();
/*      */     this.barbellhighrowlbl1 = new JLabel();
/*      */     this.facepullsbtn = new JButton();
/*      */     this.facepulllbl = new JLabel();
/*      */     this.inclinedumbbellhighrowbtn = new JButton();
/*      */     this.inclinedubbellhighrowlbl = new JLabel();
/*      */     this.Knellingcabellatpulldobtnwn = new JButton();
/*      */     this.inclinedubbellhighrow = new JLabel();
/*      */     this.Longangledumbbellrowbtn = new JButton();
/*      */     this.longangledubbellrowlbl = new JLabel();
/*      */     this.weightedskydiverbtn = new JButton();
/*      */     this.jLabel101 = new JLabel();
/*      */     this.slastperformedtf = new JTextField();
/*      */     this.shouldersbglbl = new JLabel();
/*      */     this.forearmspnl = new JPanel();
/*      */     this.forearmbackbtn = new JButton();
/*      */     this.jLabel112 = new JLabel();
/*      */     this.flastperformedtf = new JTextField();
/*      */     this.Farmerswalkbtn = new JButton();
/*      */     this.jLabel102 = new JLabel();
/*      */     this.jButton10 = new JButton();
/*      */     this.jLabel111 = new JLabel();
/*      */     this.forearmbglbl = new JLabel();
/*      */     this.quadspnl = new JPanel();
/*      */     this.quadsbackbtn = new JButton();
/*      */     this.quadsworkoutlbl = new JLabel();
/*      */     this.bulgariansplitsquadbtn = new JButton();
/*      */     this.bulgariansplitsquadlbl = new JLabel();
/*      */     this.frontsquatbtn = new JButton();
/*      */     this.frontsquatlbl = new JLabel();
/*      */     this.legextensionbtn = new JButton();
/*      */     this.legextensionlbl = new JLabel();
/*      */     this.machinepressbtn = new JButton();
/*      */     this.machinepresslbl = new JLabel();
/*      */     this.squatsbtn = new JButton();
/*      */     this.squatslbl = new JLabel();
/*      */     this.qlastperformedtf = new JTextField();
/*      */     this.quadsbglbl = new JLabel();
/*      */     this.hamspnl = new JPanel();
/*      */     this.hamsbackbtn = new JButton();
/*      */     this.jLabel114 = new JLabel();
/*      */     this.hlastperformedtf = new JTextField();
/*      */     this.siitedlegpushbtn = new JButton();
/*      */     this.jLabel103 = new JLabel();
/*      */     this.standinghamstringsbtn = new JButton();
/*      */     this.jLabel104 = new JLabel();
/*      */     this.stifflegliftbtn = new JButton();
/*      */     this.jLabel105 = new JLabel();
/*      */     this.hamstringsbglbl = new JLabel();
/*      */     this.abspnl = new JPanel();
/*      */     this.absbackbtn = new JButton();
/*      */     this.jLabel116 = new JLabel();
/*      */     this.jackknivesbtn = new JButton();
/*      */     this.jackkniveslbl = new JLabel();
/*      */     this.longcrunchesbtn = new JButton();
/*      */     this.jLabel106 = new JLabel();
/*      */     this.lankbtn = new JButton();
/*      */     this.planklbl = new JLabel();
/*      */     this.jButton1 = new JButton();
/*      */     this.vsitupslbl = new JLabel();
/*      */     this.alastperformedtf = new JTextField();
/*      */     this.absbglbl = new JLabel();
/*      */     this.calvespnl = new JPanel();
/*      */     this.calvesbackbtn = new JButton();
/*      */     this.clavesworkoutlbl = new JLabel();
/*      */     this.calvesraisesbtn = new JButton();
/*      */     this.calvesraiseslbl = new JLabel();
/*      */     this.frontraisesbtn = new JButton();
/*      */     this.frontraiseslbl = new JLabel();
/*      */     this.calveslastperformedtf = new JTextField();
/*      */     this.calvesbglbl = new JLabel();
/*      */     this.accountpnl = new JPanel();
/*      */     this.namelbl = new JLabel();
/*      */     this.nametf = new JTextField();
/*      */     this.genderlbl = new JLabel();
/*      */     this.gendertf = new JTextField();
/*      */     this.agetf = new JTextField();
/*      */     this.agelbl = new JLabel();
/*      */     this.weighttf = new JTextField();
/*      */     this.weightlbl = new JLabel();
/*      */     this.heightlbl = new JLabel();
/*      */     this.deletebtn = new JButton();
/*      */     this.heighttf = new JTextField();
/*      */     this.phntf = new JTextField();
/*      */     this.phonenumlbl = new JLabel();
/*      */     this.editbtn1 = new JButton();
/*      */     this.bmilbl = new JLabel();
/*      */     this.bmitf = new JTextField();
/*      */     this.accbglbl = new JLabel();
/*      */     this.aboutpnl = new JPanel();
/*      */     this.aboutlogolbl = new JLabel();
/*      */     this.jScrollPane1 = new JScrollPane();
/*      */     this.aboutta = new JTextArea();
/*      */     setDefaultCloseOperation(2);
/*      */     setTitle("Gymrat");
/*      */     setBackground(new Color(0, 0, 0));
/*      */     setUndecorated(true);
/*      */     setResizable(false);
/*      */     setSize(new Dimension(1080, 720));
/*      */     getContentPane().setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.sidebarpnl.setBackground(new Color(0, 0, 0));
/*      */     this.sidebarpnl.setForeground(new Color(153, 153, 153));
/*      */     this.homebtn.setBackground(new Color(0, 0, 0));
/*      */     this.homebtn.setFont(new Font("Arial", 3, 24));
/*      */     this.homebtn.setForeground(new Color(153, 153, 153));
/*      */     this.homebtn.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/home.png"));
/*      */     this.homebtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.homebtn.setBorderPainted(false);
/*      */     this.homebtn.setContentAreaFilled(false);
/*      */     this.homebtn.setCursor(new Cursor(0));
/*      */     this.homebtn.setFocusPainted(false);
/*      */     this.homebtn.setHorizontalTextPosition(0);
/*      */     this.homebtn.setIconTextGap(15);
/*      */     this.homebtn.setPreferredSize(new Dimension(137, 34));
/*      */     this.homebtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.homebtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.homebtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.homebtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.accountbtn.setBackground(new Color(0, 0, 0));
/*      */     this.accountbtn.setFont(new Font("Arial", 3, 24));
/*      */     this.accountbtn.setForeground(new Color(153, 153, 153));
/*      */     this.accountbtn.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/user.png"));
/*      */     this.accountbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountbtn.setBorderPainted(false);
/*      */     this.accountbtn.setContentAreaFilled(false);
/*      */     this.accountbtn.setFocusPainted(false);
/*      */     this.accountbtn.setIconTextGap(10);
/*      */     this.accountbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.accountbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.accountbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.accountbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.dietbtn.setBackground(new Color(0, 0, 0));
/*      */     this.dietbtn.setFont(new Font("Arial", 3, 24));
/*      */     this.dietbtn.setForeground(new Color(153, 153, 153));
/*      */     this.dietbtn.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/salad.png"));
/*      */     this.dietbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.dietbtn.setBorderPainted(false);
/*      */     this.dietbtn.setContentAreaFilled(false);
/*      */     this.dietbtn.setFocusPainted(false);
/*      */     this.dietbtn.setIconTextGap(20);
/*      */     this.dietbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.dietbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.dietbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.dietbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.workoutbtn.setBackground(new Color(0, 0, 0));
/*      */     this.workoutbtn.setFont(new Font("Arial", 3, 24));
/*      */     this.workoutbtn.setForeground(new Color(153, 153, 153));
/*      */     this.workoutbtn.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/dumbbell.png"));
/*      */     this.workoutbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.workoutbtn.setBorderPainted(false);
/*      */     this.workoutbtn.setContentAreaFilled(false);
/*      */     this.workoutbtn.setFocusPainted(false);
/*      */     this.workoutbtn.setIconTextGap(10);
/*      */     this.workoutbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.workoutbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.workoutbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.workoutbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.aboutbtn.setBackground(new Color(0, 0, 0));
/*      */     this.aboutbtn.setFont(new Font("Arial", 3, 24));
/*      */     this.aboutbtn.setForeground(new Color(153, 153, 153));
/*      */     this.aboutbtn.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/about.png"));
/*      */     this.aboutbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.aboutbtn.setBorderPainted(false);
/*      */     this.aboutbtn.setContentAreaFilled(false);
/*      */     this.aboutbtn.setFocusPainted(false);
/*      */     this.aboutbtn.setIconTextGap(20);
/*      */     this.aboutbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.aboutbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.aboutbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.aboutbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.logoutlbl.setBackground(new Color(0, 0, 0));
/*      */     this.logoutlbl.setFont(new Font("Arial", 3, 24));
/*      */     this.logoutlbl.setForeground(new Color(153, 153, 153));
/*      */     this.logoutlbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/logout.png"));
/*      */     this.logoutlbl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.logoutlbl.setBorderPainted(false);
/*      */     this.logoutlbl.setContentAreaFilled(false);
/*      */     this.logoutlbl.setFocusPainted(false);
/*      */     this.logoutlbl.setIconTextGap(20);
/*      */     this.logoutlbl.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.logoutlblMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.logoutlbl.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.logoutlblActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     GroupLayout sidebarpnlLayout = new GroupLayout(this.sidebarpnl);
/*      */     this.sidebarpnl.setLayout(sidebarpnlLayout);
/*      */     sidebarpnlLayout.setHorizontalGroup(sidebarpnlLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(sidebarpnlLayout.createSequentialGroup().addGap(19, 19, 19).addGroup(sidebarpnlLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(this.logoutlbl, -2, 140, -2).addComponent(this.dietbtn, -2, 140, -2).addComponent(this.accountbtn, -2, 140, -2).addComponent(this.workoutbtn, -2, 140, -2).addComponent(this.homebtn, -2, 140, -2).addComponent(this.aboutbtn, -2, 140, -2)).addGap(56, 56, 56)));
/*      */     sidebarpnlLayout.setVerticalGroup(sidebarpnlLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(GroupLayout.Alignment.TRAILING, sidebarpnlLayout.createSequentialGroup().addContainerGap(156, 32767).addComponent(this.homebtn, -2, 50, -2).addGap(18, 18, 18).addComponent(this.accountbtn, -2, 50, -2).addGap(18, 18, 18).addComponent(this.dietbtn, -2, 50, -2).addGap(18, 18, 18).addComponent(this.workoutbtn, -2, 50, -2).addGap(18, 18, 18).addComponent(this.aboutbtn, -2, 50, -2).addGap(18, 18, 18).addComponent(this.logoutlbl, -2, 50, -2).addGap(174, 174, 174)));
/*      */     getContentPane().add(this.sidebarpnl, new AbsoluteConstraints(0, 0, 190, 720));
/*      */     this.defaultpnl.setBackground(new Color(0, 0, 0));
/*      */     this.defaultpnl.setPreferredSize(new Dimension(730, 710));
/*      */     this.defaultpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.homepnl.setBackground(new Color(0, 0, 0));
/*      */     this.homepnl.setMinimumSize(new Dimension(780, 710));
/*      */     this.homepnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.homepnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.welcomemsglbl.setFont(new Font("Arial", 3, 36));
/*      */     this.welcomemsglbl.setForeground(new Color(153, 153, 153));
/*      */     this.welcomemsglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/8-account-outline (6).gif"));
/*      */     this.welcomemsglbl.setText("Name");
/*      */     this.welcomemsglbl.setToolTipText("");
/*      */     this.welcomemsglbl.setIconTextGap(-30);
/*      */     this.homepnl.add(this.welcomemsglbl, new AbsoluteConstraints(250, 40, 420, 100));
/*      */     this.wlcquotelbl.setFont(new Font("Arial", 3, 24));
/*      */     this.wlcquotelbl.setForeground(new Color(153, 153, 153));
/*      */     this.wlcquotelbl.setHorizontalAlignment(0);
/*      */     this.wlcquotelbl.setText("TRUST THE PROCESS");
/*      */     this.homepnl.add(this.wlcquotelbl, new AbsoluteConstraints(320, 30, 300, 250));
/*      */     this.lastloginlbl.setFont(new Font("Arial", 0, 24));
/*      */     this.lastloginlbl.setForeground(new Color(153, 153, 153));
/*      */     this.lastloginlbl.setText("Last Login : ");
/*      */     this.homepnl.add(this.lastloginlbl, new AbsoluteConstraints(300, 650, -1, -1));
/*      */     this.dateloginlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.dateloginlbl.setForeground(new Color(153, 153, 153));
/*      */     this.dateloginlbl.setText("jLabel36");
/*      */     this.homepnl.add(this.dateloginlbl, new AbsoluteConstraints(460, 650, 180, 28));
/*      */     this.bglbl.setBackground(new Color(0, 0, 0));
/*      */     this.bglbl.setForeground(new Color(153, 153, 153));
/*      */     this.bglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/anastase-maragos-9dzWZQWZMdE-unsplash (1).jpg"));
/*      */     this.bglbl.setText("jLabel4");
/*      */     this.bglbl.setDisplayedMnemonicIndex(0);
/*      */     this.bglbl.setPreferredSize(new Dimension(900, 720));
/*      */     this.homepnl.add(this.bglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.defaultpnl.add(this.homepnl, new AbsoluteConstraints(0, 0, -1, -1));
/*      */     this.dietpnl.setBackground(new Color(0, 0, 0));
/*      */     this.dietpnl.setMinimumSize(new Dimension(900, 720));
/*      */     this.dietpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.dietpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.dietbarpnl.setBackground(new Color(0, 0, 0));
/*      */     this.dietbarpnl.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.dietbarpnlMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.weightlossbtn.setBackground(new Color(0, 0, 0));
/*      */     this.weightlossbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.weightlossbtn.setForeground(new Color(153, 153, 153));
/*      */     this.weightlossbtn.setText("Weight Loss");
/*      */     this.weightlossbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.weightlossbtn.setFocusPainted(false);
/*      */     this.weightlossbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.weightlossbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.weightlossbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.weightlossbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.weightmaintainbtn.setBackground(new Color(0, 0, 0));
/*      */     this.weightmaintainbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.weightmaintainbtn.setForeground(new Color(153, 153, 153));
/*      */     this.weightmaintainbtn.setText("Weight Maintain");
/*      */     this.weightmaintainbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.weightmaintainbtn.setFocusPainted(false);
/*      */     this.weightmaintainbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.weightmaintainbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.weightmaintainbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.weightmaintainbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.weightgainbtn.setBackground(new Color(0, 0, 0));
/*      */     this.weightgainbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.weightgainbtn.setForeground(new Color(153, 153, 153));
/*      */     this.weightgainbtn.setText("Weight Gain");
/*      */     this.weightgainbtn.setToolTipText("");
/*      */     this.weightgainbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.weightgainbtn.setFocusPainted(false);
/*      */     this.weightgainbtn.setHorizontalTextPosition(0);
/*      */     this.weightgainbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.weightgainbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     GroupLayout dietbarpnlLayout = new GroupLayout(this.dietbarpnl);
/*      */     this.dietbarpnl.setLayout(dietbarpnlLayout);
/*      */     dietbarpnlLayout.setHorizontalGroup(dietbarpnlLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(dietbarpnlLayout.createSequentialGroup().addGap(44, 44, 44).addComponent(this.weightlossbtn).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 136, 32767).addComponent(this.weightmaintainbtn).addGap(148, 148, 148).addComponent(this.weightgainbtn).addGap(69, 69, 69)));
/*      */     dietbarpnlLayout.setVerticalGroup(dietbarpnlLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(dietbarpnlLayout.createSequentialGroup().addGap(17, 17, 17).addGroup(dietbarpnlLayout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(this.weightlossbtn).addComponent(this.weightmaintainbtn).addComponent(this.weightgainbtn)).addContainerGap(19, 32767)));
/*      */     this.dietpnl.add(this.dietbarpnl, new AbsoluteConstraints(0, 0, 730, 60));
/*      */     this.weightmainpnl.setBackground(new Color(0, 0, 0));
/*      */     this.weightmainpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.weightmainpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.jLabel48.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel48.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel48.setText("Lunch :");
/*      */     this.weightmainpnl.add(this.jLabel48, new AbsoluteConstraints(10, 180, -1, -1));
/*      */     this.jLabel52.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel52.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel52.setText("-----------------------------------------------------------------------");
/*      */     this.weightmainpnl.add(this.jLabel52, new AbsoluteConstraints(6, 160, -1, -1));
/*      */     this.jLabel46.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel46.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel46.setText("1/2 plate Rice");
/*      */     this.weightmainpnl.add(this.jLabel46, new AbsoluteConstraints(120, 480, -1, -1));
/*      */     this.jLabel45.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel45.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel45.setText("DAL(Any Dal)");
/*      */     this.weightmainpnl.add(this.jLabel45, new AbsoluteConstraints(130, 200, -1, -1));
/*      */     this.jLabel40.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel40.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel40.setText("3 Eggs or 3 Eggs omlette");
/*      */     this.weightmainpnl.add(this.jLabel40, new AbsoluteConstraints(120, 460, -1, -1));
/*      */     this.jLabel55.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel55.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel55.setText("Snacks:");
/*      */     this.weightmainpnl.add(this.jLabel55, new AbsoluteConstraints(10, 330, -1, -1));
/*      */     this.jLabel63.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel63.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel63.setText("3 Egg Omlet + 2 Fruits ");
/*      */     this.weightmainpnl.add(this.jLabel63, new AbsoluteConstraints(130, 30, -1, -1));
/*      */     this.jLabel60.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel60.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel60.setText("------------------------------------------------------------------------");
/*      */     this.weightmainpnl.add(this.jLabel60, new AbsoluteConstraints(10, 420, -1, -1));
/*      */     this.jLabel62.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel62.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel62.setText("Dosa + Fruit Juice");
/*      */     this.weightmainpnl.add(this.jLabel62, new AbsoluteConstraints(130, 70, -1, -1));
/*      */     this.jLabel44.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel44.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel44.setText("2 Chapati");
/*      */     this.weightmainpnl.add(this.jLabel44, new AbsoluteConstraints(130, 180, -1, -1));
/*      */     this.jLabel64.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel64.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel64.setText("3 Boiled eggs");
/*      */     this.weightmainpnl.add(this.jLabel64, new AbsoluteConstraints(120, 330, -1, -1));
/*      */     this.jLabel43.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel43.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel43.setText("Paneer Sabji");
/*      */     this.weightmainpnl.add(this.jLabel43, new AbsoluteConstraints(130, 230, -1, -1));
/*      */     this.jLabel47.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel47.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel47.setText("1 Omega 3 ");
/*      */     this.weightmainpnl.add(this.jLabel47, new AbsoluteConstraints(130, 140, -1, -1));
/*      */     this.jLabel68.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel68.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel68.setText("-------------------------------------------------------------------------");
/*      */     this.weightmainpnl.add(this.jLabel68, new AbsoluteConstraints(10, 500, -1, -1));
/*      */     this.jLabel69.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel69.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel69.setText("Notes:");
/*      */     this.weightmainpnl.add(this.jLabel69, new AbsoluteConstraints(10, 530, -1, -1));
/*      */     this.jLabel39.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel39.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel39.setText("Breakfast :");
/*      */     this.weightmainpnl.add(this.jLabel39, new AbsoluteConstraints(0, 30, -1, -1));
/*      */     this.jLabel38.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel38.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel38.setText("Dals : Moong Dal,Amaranth Dal,Toor Dal,Chana Dal,Massor Dal");
/*      */     this.weightmainpnl.add(this.jLabel38, new AbsoluteConstraints(120, 590, -1, -1));
/*      */     this.jLabel54.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel54.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel54.setText("Fresh Fruits raita");
/*      */     this.weightmainpnl.add(this.jLabel54, new AbsoluteConstraints(120, 360, -1, -1));
/*      */     this.jLabel42.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel42.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel42.setText("Fruits : apples,Watermelons,musk melons,pears,guava");
/*      */     this.weightmainpnl.add(this.jLabel42, new AbsoluteConstraints(120, 560, -1, -1));
/*      */     this.jLabel67.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel67.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel67.setText("3 boiled eggs");
/*      */     this.weightmainpnl.add(this.jLabel67, new AbsoluteConstraints(130, 290, -1, -1));
/*      */     this.jLabel58.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel58.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel58.setText("Sabji for lunch : Capsicum,lady Finger,green peas");
/*      */     this.weightmainpnl.add(this.jLabel58, new AbsoluteConstraints(120, 530, -1, -1));
/*      */     this.jLabel53.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel53.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel53.setText("Dinner:");
/*      */     this.weightmainpnl.add(this.jLabel53, new AbsoluteConstraints(10, 440, -1, -1));
/*      */     this.jLabel57.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel57.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel57.setText("1 Glass Buttermilk");
/*      */     this.weightmainpnl.add(this.jLabel57, new AbsoluteConstraints(120, 400, -1, -1));
/*      */     this.jLabel37.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel37.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel37.setText("2 Chapati soya sabji or cabbage masala ");
/*      */     this.weightmainpnl.add(this.jLabel37, new AbsoluteConstraints(120, 440, -1, -1));
/*      */     this.jLabel61.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel61.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel61.setText("or");
/*      */     this.weightmainpnl.add(this.jLabel61, new AbsoluteConstraints(170, 50, -1, -1));
/*      */     this.jLabel66.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel66.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel66.setText("Oats  +  Fruit juice");
/*      */     this.weightmainpnl.add(this.jLabel66, new AbsoluteConstraints(130, 110, -1, -1));
/*      */     this.jLabel51.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel51.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel51.setText("-----------------------------------------------------------------------");
/*      */     this.weightmainpnl.add(this.jLabel51, new AbsoluteConstraints(10, 310, -1, -1));
/*      */     this.jLabel59.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel59.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel59.setText("1/2 Plate rice");
/*      */     this.weightmainpnl.add(this.jLabel59, new AbsoluteConstraints(130, 260, -1, -1));
/*      */     this.jLabel56.setFont(new Font("Arial", 3, 18));
/*      */     this.jLabel56.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel56.setText("or");
/*      */     this.weightmainpnl.add(this.jLabel56, new AbsoluteConstraints(170, 90, -1, -1));
/*      */     this.jLabel65.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel65.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel65.setText("-------------------------------------------------------------------------------------------");
/*      */     this.weightmainpnl.add(this.jLabel65, new AbsoluteConstraints(10, 610, -1, -1));
/*      */     this.jLabel113.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/lamp(1).png"));
/*      */     this.weightmainpnl.add(this.jLabel113, new AbsoluteConstraints(660, 180, -1, 70));
/*      */     this.wmtip1scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip1scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip1scrl.setOpaque(false);
/*      */     this.wmtip1tf.setEditable(false);
/*      */     this.wmtip1tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip1tf.setColumns(20);
/*      */     this.wmtip1tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip1tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip1tf.setLineWrap(true);
/*      */     this.wmtip1tf.setRows(5);
/*      */     this.wmtip1tf.setTabSize(5);
/*      */     this.wmtip1tf.setText("Avoid drinking water during meals: Drinking too much water during meals can make you feel too full to eat more. Try to avoid drinking too much water during meals and instead drink   it between meals.");
/*      */     this.wmtip1tf.setWrapStyleWord(true);
/*      */     this.wmtip1tf.setBorder((Border)null);
/*      */     this.wmtip1tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip1tf.setRequestFocusEnabled(false);
/*      */     this.wmtip1scrl.setViewportView(this.wmtip1tf);
/*      */     this.weightmainpnl.add(this.wmtip1scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip2scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip2scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip2scrl.setOpaque(false);
/*      */     this.wmtip2tf.setEditable(false);
/*      */     this.wmtip2tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip2tf.setColumns(20);
/*      */     this.wmtip2tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip2tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip2tf.setLineWrap(true);
/*      */     this.wmtip2tf.setRows(5);
/*      */     this.wmtip2tf.setTabSize(5);
/*      */     this.wmtip2tf.setText("Increase your calorie intake: To gain weight, you need to consume more calories than you burn. Aim to consume 300-500 calories more than your daily caloric needs.");
/*      */     this.wmtip2tf.setWrapStyleWord(true);
/*      */     this.wmtip2tf.setBorder((Border)null);
/*      */     this.wmtip2tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip2tf.setRequestFocusEnabled(false);
/*      */     this.wmtip2scrl.setViewportView(this.wmtip2tf);
/*      */     this.weightmainpnl.add(this.wmtip2scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip3scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip3scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip3scrl.setOpaque(false);
/*      */     this.wmtip3tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip3tf.setColumns(20);
/*      */     this.wmtip3tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip3tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip3tf.setLineWrap(true);
/*      */     this.wmtip3tf.setRows(5);
/*      */     this.wmtip3tf.setTabSize(5);
/*      */     this.wmtip3tf.setText("Eat healthy fats: Healthy fats are an important source of calories and can help promote weight gain. Good sources of healthy fats include avocado, nuts, seeds, olive oil, and fatty fish.");
/*      */     this.wmtip3tf.setWrapStyleWord(true);
/*      */     this.wmtip3tf.setBorder((Border)null);
/*      */     this.wmtip3tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip3tf.setRequestFocusEnabled(false);
/*      */     this.wmtip3scrl.setViewportView(this.wmtip3tf);
/*      */     this.weightmainpnl.add(this.wmtip3scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip4scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip4scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip4scrl.setOpaque(false);
/*      */     this.wmtip4tf.setEditable(false);
/*      */     this.wmtip4tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip4tf.setColumns(20);
/*      */     this.wmtip4tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip4tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip4tf.setLineWrap(true);
/*      */     this.wmtip4tf.setRows(5);
/*      */     this.wmtip4tf.setTabSize(5);
/*      */     this.wmtip4tf.setText("Snack on high-calorie foods: Snacking on high-calorie foods like nuts, dried fruit, and cheese can help increase your overall calorie intake.");
/*      */     this.wmtip4tf.setWrapStyleWord(true);
/*      */     this.wmtip4tf.setBorder((Border)null);
/*      */     this.wmtip4tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip4tf.setRequestFocusEnabled(false);
/*      */     this.wmtip4scrl.setViewportView(this.wmtip4tf);
/*      */     this.weightmainpnl.add(this.wmtip4scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip5scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip5scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip5scrl.setOpaque(false);
/*      */     this.wmtip5tf.setEditable(false);
/*      */     this.wmtip5tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip5tf.setColumns(20);
/*      */     this.wmtip5tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip5tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip5tf.setLineWrap(true);
/*      */     this.wmtip5tf.setRows(5);
/*      */     this.wmtip5tf.setTabSize(5);
/*      */     this.wmtip5tf.setText("Focus on protein-rich foods: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip5tf.setWrapStyleWord(true);
/*      */     this.wmtip5tf.setBorder((Border)null);
/*      */     this.wmtip5tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip5tf.setRequestFocusEnabled(false);
/*      */     this.wmtip5scrl.setViewportView(this.wmtip5tf);
/*      */     this.weightmainpnl.add(this.wmtip5scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip6scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip6scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip6scrl.setOpaque(false);
/*      */     this.wmtip6tf.setEditable(false);
/*      */     this.wmtip6tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip6tf.setColumns(20);
/*      */     this.wmtip6tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip6tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip6tf.setLineWrap(true);
/*      */     this.wmtip6tf.setRows(5);
/*      */     this.wmtip6tf.setTabSize(5);
/*      */     this.wmtip6tf.setText("Eat more frequently: Instead of eating three large meals, try to eat smaller, more frequent meals throughout the day. This can help increase your overall calorie intake.");
/*      */     this.wmtip6tf.setWrapStyleWord(true);
/*      */     this.wmtip6tf.setBorder((Border)null);
/*      */     this.wmtip6tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip6tf.setRequestFocusEnabled(false);
/*      */     this.wmtip6scrl.setViewportView(this.wmtip6tf);
/*      */     this.weightmainpnl.add(this.wmtip6scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip7scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip7scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip7scrl.setOpaque(false);
/*      */     this.wmtip7tf.setEditable(false);
/*      */     this.wmtip7tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip7tf.setColumns(20);
/*      */     this.wmtip7tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip7tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip7tf.setLineWrap(true);
/*      */     this.wmtip7tf.setRows(5);
/*      */     this.wmtip7tf.setTabSize(5);
/*      */     this.wmtip7tf.setText("Get enough sleep: Getting enough rest is important for overall health, but it can also help you gain weight by reducing stress levels and allowing your body to recover from exercise.");
/*      */     this.wmtip7tf.setWrapStyleWord(true);
/*      */     this.wmtip7tf.setBorder((Border)null);
/*      */     this.wmtip7tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip7tf.setRequestFocusEnabled(false);
/*      */     this.wmtip7scrl.setViewportView(this.wmtip7tf);
/*      */     this.weightmainpnl.add(this.wmtip7scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip8scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip8scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip8scrl.setOpaque(false);
/*      */     this.wmtip8tf.setEditable(false);
/*      */     this.wmtip8tf.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip8tf.setColumns(20);
/*      */     this.wmtip8tf.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip8tf.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip8tf.setLineWrap(true);
/*      */     this.wmtip8tf.setRows(5);
/*      */     this.wmtip8tf.setTabSize(5);
/*      */     this.wmtip8tf.setText("Include protein in your diet: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip8tf.setWrapStyleWord(true);
/*      */     this.wmtip8tf.setBorder((Border)null);
/*      */     this.wmtip8tf.setHighlighter((Highlighter)null);
/*      */     this.wmtip8tf.setRequestFocusEnabled(false);
/*      */     this.wmtip8scrl.setViewportView(this.wmtip8tf);
/*      */     this.weightmainpnl.add(this.wmtip8scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wlbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/pla (1).jpg"));
/*      */     this.wlbglbl.setText("jLabel79");
/*      */     this.wlbglbl.setPreferredSize(new Dimension(900, 720));
/*      */     this.weightmainpnl.add(this.wlbglbl, new AbsoluteConstraints(0, 0, -1, 660));
/*      */     this.dietpnl.add(this.weightmainpnl, new AbsoluteConstraints(0, 40, -1, -1));
/*      */     this.weightgainpnl.setBackground(new Color(0, 0, 0));
/*      */     this.weightgainpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.weightgainpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.jLabel3.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel3.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel3.setText("Breakfast :");
/*      */     this.weightgainpnl.add(this.jLabel3, new AbsoluteConstraints(0, 30, -1, -1));
/*      */     this.jLabel41.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel41.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel41.setText("Egg Omlet + 2 Fruits ");
/*      */     this.weightgainpnl.add(this.jLabel41, new AbsoluteConstraints(130, 30, -1, -1));
/*      */     this.jLabel49.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel49.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel49.setText("or");
/*      */     this.weightgainpnl.add(this.jLabel49, new AbsoluteConstraints(170, 50, -1, -1));
/*      */     this.jLabel50.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel50.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel50.setText("3 Eggs + 1 Bowl Upma");
/*      */     this.weightgainpnl.add(this.jLabel50, new AbsoluteConstraints(130, 70, -1, -1));
/*      */     this.jLabel70.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel70.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel70.setText("or");
/*      */     this.weightgainpnl.add(this.jLabel70, new AbsoluteConstraints(170, 90, -1, -1));
/*      */     this.jLabel71.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel71.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel71.setText("1 pohe + 1 oats");
/*      */     this.weightgainpnl.add(this.jLabel71, new AbsoluteConstraints(130, 110, -1, -1));
/*      */     this.jLabel72.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel72.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel72.setText("1 Omega 3  + 1 Multivitamin ");
/*      */     this.weightgainpnl.add(this.jLabel72, new AbsoluteConstraints(130, 140, -1, -1));
/*      */     this.jLabel73.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel73.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel73.setText("----------------------------------------------------------------------");
/*      */     this.weightgainpnl.add(this.jLabel73, new AbsoluteConstraints(6, 160, -1, -1));
/*      */     this.jLabel74.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel74.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel74.setText("Lunch :");
/*      */     this.weightgainpnl.add(this.jLabel74, new AbsoluteConstraints(10, 180, -1, -1));
/*      */     this.jLabel75.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel75.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel75.setText("2 Chapati");
/*      */     this.weightgainpnl.add(this.jLabel75, new AbsoluteConstraints(130, 180, -1, -1));
/*      */     this.jLabel76.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel76.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel76.setText("DAL(Any Dal)");
/*      */     this.weightgainpnl.add(this.jLabel76, new AbsoluteConstraints(130, 210, -1, -1));
/*      */     this.jLabel77.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel77.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel77.setText("2 Boiled Eggs");
/*      */     this.weightgainpnl.add(this.jLabel77, new AbsoluteConstraints(130, 240, -1, -1));
/*      */     this.jLabel78.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel78.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel78.setText("1 Salad ");
/*      */     this.weightgainpnl.add(this.jLabel78, new AbsoluteConstraints(130, 260, -1, -1));
/*      */     this.jLabel80.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel80.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel80.setText("1 Buutermilk");
/*      */     this.weightgainpnl.add(this.jLabel80, new AbsoluteConstraints(130, 290, -1, -1));
/*      */     this.jLabel81.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel81.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel81.setText("Flax seeds Raita");
/*      */     this.weightgainpnl.add(this.jLabel81, new AbsoluteConstraints(130, 320, -1, -1));
/*      */     this.jLabel82.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel82.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel82.setText("1/2 plate Rice");
/*      */     this.weightgainpnl.add(this.jLabel82, new AbsoluteConstraints(130, 350, -1, -1));
/*      */     this.jLabel83.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel83.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel83.setText("-----------------------------------------------------------------------");
/*      */     this.weightgainpnl.add(this.jLabel83, new AbsoluteConstraints(10, 360, -1, -1));
/*      */     this.jLabel84.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel84.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel84.setText("Snacks:");
/*      */     this.weightgainpnl.add(this.jLabel84, new AbsoluteConstraints(10, 380, -1, -1));
/*      */     this.jLabel86.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel86.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel86.setText("2 Banana");
/*      */     this.weightgainpnl.add(this.jLabel86, new AbsoluteConstraints(120, 390, -1, -1));
/*      */     this.jLabel87.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel87.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel87.setText("1 Glass Buttermilk");
/*      */     this.weightgainpnl.add(this.jLabel87, new AbsoluteConstraints(120, 410, -1, -1));
/*      */     this.jLabel88.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel88.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel88.setText("------------------------------------------------------------------------");
/*      */     this.weightgainpnl.add(this.jLabel88, new AbsoluteConstraints(10, 430, -1, -1));
/*      */     this.jLabel89.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel89.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel89.setText("100g Chicken + rice ");
/*      */     this.weightgainpnl.add(this.jLabel89, new AbsoluteConstraints(120, 460, -1, -1));
/*      */     this.jLabel90.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel90.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel90.setText("Dinner:");
/*      */     this.weightgainpnl.add(this.jLabel90, new AbsoluteConstraints(10, 450, -1, -1));
/*      */     this.jLabel91.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel91.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel91.setText("or");
/*      */     this.weightgainpnl.add(this.jLabel91, new AbsoluteConstraints(160, 480, -1, -1));
/*      */     this.jLabel92.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel92.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel92.setText("salad + Buttermilk");
/*      */     this.weightgainpnl.add(this.jLabel92, new AbsoluteConstraints(120, 520, -1, -1));
/*      */     this.jLabel93.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel93.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel93.setText("-------------------------------------------------------------------------");
/*      */     this.weightgainpnl.add(this.jLabel93, new AbsoluteConstraints(10, 530, -1, -1));
/*      */     this.jLabel94.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel94.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel94.setText("Notes:");
/*      */     this.weightgainpnl.add(this.jLabel94, new AbsoluteConstraints(10, 550, -1, -1));
/*      */     this.jLabel95.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel95.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel95.setText("Sabji for lunch : Capsicum,lady Finger,green peas");
/*      */     this.weightgainpnl.add(this.jLabel95, new AbsoluteConstraints(120, 550, -1, -1));
/*      */     this.jLabel96.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel96.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel96.setText("Fruits : apples,Watermelons,musk melons,pears,guava");
/*      */     this.weightgainpnl.add(this.jLabel96, new AbsoluteConstraints(120, 570, -1, -1));
/*      */     this.jLabel97.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel97.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel97.setText("-------------------------------------------------------------------------------------------");
/*      */     this.weightgainpnl.add(this.jLabel97, new AbsoluteConstraints(10, 610, -1, -1));
/*      */     this.jLabel98.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel98.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel98.setText("Dals : Moong Dal,Amaranth Dal,Toor Dal,Chana Dal,Massor Dal");
/*      */     this.weightgainpnl.add(this.jLabel98, new AbsoluteConstraints(120, 590, -1, -1));
/*      */     this.jLabel99.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel99.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel99.setText("3 eggs + 2 bowl   Dal + rice ");
/*      */     this.weightgainpnl.add(this.jLabel99, new AbsoluteConstraints(120, 500, -1, -1));
/*      */     this.wmtip8scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip8scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip8scrl1.setOpaque(false);
/*      */     this.wmtip8tf1.setEditable(false);
/*      */     this.wmtip8tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip8tf1.setColumns(20);
/*      */     this.wmtip8tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip8tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip8tf1.setLineWrap(true);
/*      */     this.wmtip8tf1.setRows(5);
/*      */     this.wmtip8tf1.setTabSize(5);
/*      */     this.wmtip8tf1.setText("Include protein in your diet: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip8tf1.setWrapStyleWord(true);
/*      */     this.wmtip8tf1.setBorder((Border)null);
/*      */     this.wmtip8tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip8tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip8scrl1.setViewportView(this.wmtip8tf1);
/*      */     this.weightgainpnl.add(this.wmtip8scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip7scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip7scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip7scrl1.setOpaque(true);
/*      */     this.wmtip7tf1.setEditable(false);
/*      */     this.wmtip7tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip7tf1.setColumns(20);
/*      */     this.wmtip7tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip7tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip7tf1.setLineWrap(true);
/*      */     this.wmtip7tf1.setRows(5);
/*      */     this.wmtip7tf1.setTabSize(5);
/*      */     this.wmtip7tf1.setText("Get enough sleep: Getting enough rest is important for overall health, but it can also help you gain weight by reducing stress levels and allowing your body to recover from exercise.");
/*      */     this.wmtip7tf1.setWrapStyleWord(true);
/*      */     this.wmtip7tf1.setBorder((Border)null);
/*      */     this.wmtip7tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip7tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip7scrl1.setViewportView(this.wmtip7tf1);
/*      */     this.weightgainpnl.add(this.wmtip7scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip6scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip6scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip6scrl1.setOpaque(false);
/*      */     this.wmtip6tf1.setEditable(false);
/*      */     this.wmtip6tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip6tf1.setColumns(20);
/*      */     this.wmtip6tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip6tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip6tf1.setLineWrap(true);
/*      */     this.wmtip6tf1.setRows(5);
/*      */     this.wmtip6tf1.setTabSize(5);
/*      */     this.wmtip6tf1.setText("Eat more frequently: Instead of eating three large meals, try to eat smaller, more frequent meals throughout the day. This can help increase your overall calorie intake.");
/*      */     this.wmtip6tf1.setWrapStyleWord(true);
/*      */     this.wmtip6tf1.setBorder((Border)null);
/*      */     this.wmtip6tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip6tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip6scrl1.setViewportView(this.wmtip6tf1);
/*      */     this.weightgainpnl.add(this.wmtip6scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip5scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip5scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip5scrl1.setOpaque(false);
/*      */     this.wmtip5tf1.setEditable(false);
/*      */     this.wmtip5tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip5tf1.setColumns(20);
/*      */     this.wmtip5tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip5tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip5tf1.setLineWrap(true);
/*      */     this.wmtip5tf1.setRows(5);
/*      */     this.wmtip5tf1.setTabSize(5);
/*      */     this.wmtip5tf1.setText("Focus on protein-rich foods: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip5tf1.setWrapStyleWord(true);
/*      */     this.wmtip5tf1.setBorder((Border)null);
/*      */     this.wmtip5tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip5tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip5scrl1.setViewportView(this.wmtip5tf1);
/*      */     this.weightgainpnl.add(this.wmtip5scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip4scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip4scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip4scrl1.setOpaque(false);
/*      */     this.wmtip4tf1.setEditable(false);
/*      */     this.wmtip4tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip4tf1.setColumns(20);
/*      */     this.wmtip4tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip4tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip4tf1.setLineWrap(true);
/*      */     this.wmtip4tf1.setRows(5);
/*      */     this.wmtip4tf1.setTabSize(5);
/*      */     this.wmtip4tf1.setText("Snack on high-calorie foods: Snacking on high-calorie foods like nuts, dried fruit, and cheese can help increase your overall calorie intake.");
/*      */     this.wmtip4tf1.setWrapStyleWord(true);
/*      */     this.wmtip4tf1.setBorder((Border)null);
/*      */     this.wmtip4tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip4tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip4scrl1.setViewportView(this.wmtip4tf1);
/*      */     this.weightgainpnl.add(this.wmtip4scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip3scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip3scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip3scrl1.setOpaque(false);
/*      */     this.wmtip3tf1.setEditable(false);
/*      */     this.wmtip3tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip3tf1.setColumns(20);
/*      */     this.wmtip3tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip3tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip3tf1.setLineWrap(true);
/*      */     this.wmtip3tf1.setRows(5);
/*      */     this.wmtip3tf1.setTabSize(5);
/*      */     this.wmtip3tf1.setText("Eat healthy fats: Healthy fats are an important source of calories and can help promote weight gain. Good sources of healthy fats include avocado, nuts, seeds, olive oil, and fatty fish.");
/*      */     this.wmtip3tf1.setWrapStyleWord(true);
/*      */     this.wmtip3tf1.setBorder((Border)null);
/*      */     this.wmtip3tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip3tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip3scrl1.setViewportView(this.wmtip3tf1);
/*      */     this.weightgainpnl.add(this.wmtip3scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip2scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip2scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip2scrl1.setOpaque(false);
/*      */     this.wmtip2tf1.setEditable(false);
/*      */     this.wmtip2tf1.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip2tf1.setColumns(20);
/*      */     this.wmtip2tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip2tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip2tf1.setLineWrap(true);
/*      */     this.wmtip2tf1.setRows(5);
/*      */     this.wmtip2tf1.setTabSize(5);
/*      */     this.wmtip2tf1.setText("Increase your calorie intake: To gain weight, you need to consume more calories than you burn. Aim to consume 300-500 calories more than your daily caloric needs.");
/*      */     this.wmtip2tf1.setWrapStyleWord(true);
/*      */     this.wmtip2tf1.setBorder((Border)null);
/*      */     this.wmtip2tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip2tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip2scrl1.setViewportView(this.wmtip2tf1);
/*      */     this.weightgainpnl.add(this.wmtip2scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wmtip1scrl1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip1scrl1.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wmtip1scrl1.setOpaque(false);
/*      */     this.wmtip1tf1.setEditable(false);
/*      */     this.wmtip1tf1.setBackground(new Color(153, 153, 153, 0));
/*      */     this.wmtip1tf1.setColumns(20);
/*      */     this.wmtip1tf1.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip1tf1.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip1tf1.setLineWrap(true);
/*      */     this.wmtip1tf1.setRows(5);
/*      */     this.wmtip1tf1.setTabSize(5);
/*      */     this.wmtip1tf1.setText("Avoid drinking water during meals: Drinking too much water during meals can make you feel too full to eat more. Try to avoid drinking too much water during meals and instead drink   it between meals.");
/*      */     this.wmtip1tf1.setWrapStyleWord(true);
/*      */     this.wmtip1tf1.setBorder((Border)null);
/*      */     this.wmtip1tf1.setHighlighter((Highlighter)null);
/*      */     this.wmtip1tf1.setRequestFocusEnabled(false);
/*      */     this.wmtip1scrl1.setViewportView(this.wmtip1tf1);
/*      */     this.weightgainpnl.add(this.wmtip1scrl1, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.jLabel115.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/lamp(1).png"));
/*      */     this.weightgainpnl.add(this.jLabel115, new AbsoluteConstraints(660, 180, -1, 70));
/*      */     this.bgiconlbl.setBackground(new Color(0, 0, 0));
/*      */     this.bgiconlbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/pla (1).jpg"));
/*      */     this.bgiconlbl.setText("jLabel79");
/*      */     this.bgiconlbl.setPreferredSize(new Dimension(957, 660));
/*      */     this.bgiconlbl.addInputMethodListener(new InputMethodListener() {
/*      */           public void caretPositionChanged(InputMethodEvent evt) {}
/*      */           
/*      */           public void inputMethodTextChanged(InputMethodEvent evt) {
/*      */             main.this.bgiconlblInputMethodTextChanged(evt);
/*      */           }
/*      */         });
/*      */     this.weightgainpnl.add(this.bgiconlbl, new AbsoluteConstraints(0, 0, 900, -1));
/*      */     this.dietpnl.add(this.weightgainpnl, new AbsoluteConstraints(0, 40, -1, 710));
/*      */     this.weightlosspnl.setBackground(new Color(0, 0, 0));
/*      */     this.weightlosspnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.weightlosspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.jLabel1.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel1.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel1.setText("Breakfast :");
/*      */     this.weightlosspnl.add(this.jLabel1, new AbsoluteConstraints(0, 30, -1, -1));
/*      */     this.jLabel4.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel4.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel4.setText("or");
/*      */     this.weightlosspnl.add(this.jLabel4, new AbsoluteConstraints(170, 90, -1, -1));
/*      */     this.jLabel5.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel5.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel5.setText("Oats  +  Fruit juice");
/*      */     this.weightlosspnl.add(this.jLabel5, new AbsoluteConstraints(130, 110, -1, -1));
/*      */     this.jLabel6.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel6.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel6.setText("Egg Omlet + 2 Fruits ");
/*      */     this.weightlosspnl.add(this.jLabel6, new AbsoluteConstraints(130, 30, -1, -1));
/*      */     this.jLabel7.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel7.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel7.setText("or");
/*      */     this.weightlosspnl.add(this.jLabel7, new AbsoluteConstraints(170, 50, -1, -1));
/*      */     this.jLabel8.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel8.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel8.setText("Dosa + Fruit Juice");
/*      */     this.weightlosspnl.add(this.jLabel8, new AbsoluteConstraints(130, 70, -1, -1));
/*      */     this.jLabel9.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel9.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel9.setText("1 Omega 3 ");
/*      */     this.weightlosspnl.add(this.jLabel9, new AbsoluteConstraints(130, 140, -1, -1));
/*      */     this.jLabel10.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel10.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel10.setText("Notes:");
/*      */     this.weightlosspnl.add(this.jLabel10, new AbsoluteConstraints(10, 520, -1, -1));
/*      */     this.jLabel11.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel11.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel11.setText("or");
/*      */     this.weightlosspnl.add(this.jLabel11, new AbsoluteConstraints(150, 230, -1, -1));
/*      */     this.jLabel12.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel12.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel12.setText("-------------------------------------------------------------------------------------------");
/*      */     this.weightlosspnl.add(this.jLabel12, new AbsoluteConstraints(10, 570, -1, -1));
/*      */     this.jLabel13.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel13.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel13.setText("1 Glass Buttermilk");
/*      */     this.weightlosspnl.add(this.jLabel13, new AbsoluteConstraints(120, 420, -1, -1));
/*      */     this.jLabel14.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel14.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel14.setText("DAL(Any Dal)");
/*      */     this.weightlosspnl.add(this.jLabel14, new AbsoluteConstraints(130, 210, -1, -1));
/*      */     this.jLabel15.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel15.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel15.setText("Paneer Sabji");
/*      */     this.weightlosspnl.add(this.jLabel15, new AbsoluteConstraints(130, 250, -1, -1));
/*      */     this.jLabel16.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel16.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel16.setText("or");
/*      */     this.weightlosspnl.add(this.jLabel16, new AbsoluteConstraints(150, 270, -1, -1));
/*      */     this.jLabel17.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel17.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel17.setText("Paneer Bhurji");
/*      */     this.weightlosspnl.add(this.jLabel17, new AbsoluteConstraints(130, 290, -1, -1));
/*      */     this.jLabel18.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel18.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel18.setText("Flax seeds Raita");
/*      */     this.weightlosspnl.add(this.jLabel18, new AbsoluteConstraints(130, 320, -1, -1));
/*      */     this.jLabel19.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel19.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel19.setText("1/2 plate Rice");
/*      */     this.weightlosspnl.add(this.jLabel19, new AbsoluteConstraints(130, 350, -1, -1));
/*      */     this.jLabel20.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel20.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel20.setText("----------------------------------------------------------------------");
/*      */     this.weightlosspnl.add(this.jLabel20, new AbsoluteConstraints(6, 160, -1, -1));
/*      */     this.jLabel21.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel21.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel21.setText("Lunch :");
/*      */     this.weightlosspnl.add(this.jLabel21, new AbsoluteConstraints(10, 180, -1, -1));
/*      */     this.jLabel22.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel22.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel22.setText("2 Chapati");
/*      */     this.weightlosspnl.add(this.jLabel22, new AbsoluteConstraints(130, 180, -1, -1));
/*      */     this.jLabel23.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel23.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel23.setText("1/2 plate Rice");
/*      */     this.weightlosspnl.add(this.jLabel23, new AbsoluteConstraints(120, 490, -1, -1));
/*      */     this.jLabel24.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel24.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel24.setText("Fresh Fruits raita");
/*      */     this.weightlosspnl.add(this.jLabel24, new AbsoluteConstraints(120, 400, -1, -1));
/*      */     this.jLabel25.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel25.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel25.setText("-----------------------------------------------------------------------");
/*      */     this.weightlosspnl.add(this.jLabel25, new AbsoluteConstraints(10, 360, -1, -1));
/*      */     this.jLabel26.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel26.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel26.setText("Snacks:");
/*      */     this.weightlosspnl.add(this.jLabel26, new AbsoluteConstraints(10, 380, -1, -1));
/*      */     this.jLabel27.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel27.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel27.setText("Half plate roasted channa");
/*      */     this.weightlosspnl.add(this.jLabel27, new AbsoluteConstraints(120, 380, -1, -1));
/*      */     this.jLabel28.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel28.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel28.setText("Dals : Moong Dal,Amaranth Dal,Toor Dal,Chana Dal,Massor Dal");
/*      */     this.weightlosspnl.add(this.jLabel28, new AbsoluteConstraints(120, 560, -1, -1));
/*      */     this.jLabel29.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel29.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel29.setText("1 Soup");
/*      */     this.weightlosspnl.add(this.jLabel29, new AbsoluteConstraints(120, 470, -1, -1));
/*      */     this.jLabel30.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel30.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel30.setText("------------------------------------------------------------------------");
/*      */     this.weightlosspnl.add(this.jLabel30, new AbsoluteConstraints(10, 430, -1, -1));
/*      */     this.jLabel31.setFont(new Font("Arial", 1, 24));
/*      */     this.jLabel31.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel31.setText("Dinner:");
/*      */     this.weightlosspnl.add(this.jLabel31, new AbsoluteConstraints(10, 450, -1, -1));
/*      */     this.jLabel32.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel32.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel32.setText("2 Chapati soya sabji or cabbage masala ");
/*      */     this.weightlosspnl.add(this.jLabel32, new AbsoluteConstraints(120, 450, -1, -1));
/*      */     this.jLabel33.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel33.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel33.setText("Sabji for lunch : Capsicum,lady Finger,green peas");
/*      */     this.weightlosspnl.add(this.jLabel33, new AbsoluteConstraints(120, 520, -1, -1));
/*      */     this.jLabel34.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel34.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel34.setText("Fruits : apples,Watermelons,musk melons,pears,guava");
/*      */     this.weightlosspnl.add(this.jLabel34, new AbsoluteConstraints(120, 540, -1, -1));
/*      */     this.jLabel35.setFont(new Font("Arial", 1, 18));
/*      */     this.jLabel35.setForeground(new Color(153, 153, 153));
/*      */     this.jLabel35.setText("-------------------------------------------------------------------------");
/*      */     this.weightlosspnl.add(this.jLabel35, new AbsoluteConstraints(10, 500, -1, -1));
/*      */     this.wltip1scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip1scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip1scrl.setOpaque(false);
/*      */     this.wmtip1tf2.setEditable(false);
/*      */     this.wmtip1tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip1tf2.setColumns(20);
/*      */     this.wmtip1tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip1tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip1tf2.setLineWrap(true);
/*      */     this.wmtip1tf2.setRows(5);
/*      */     this.wmtip1tf2.setTabSize(5);
/*      */     this.wmtip1tf2.setText("Avoid drinking water during meals: Drinking too much water during meals can make you feel too full to eat more. Try to avoid drinking too much water during meals and instead drink   it between meals.");
/*      */     this.wmtip1tf2.setWrapStyleWord(true);
/*      */     this.wmtip1tf2.setBorder((Border)null);
/*      */     this.wmtip1tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip1tf2.setRequestFocusEnabled(false);
/*      */     this.wltip1scrl.setViewportView(this.wmtip1tf2);
/*      */     this.weightlosspnl.add(this.wltip1scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip2scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip2scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip2scrl.setOpaque(false);
/*      */     this.wmtip2tf2.setEditable(false);
/*      */     this.wmtip2tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip2tf2.setColumns(20);
/*      */     this.wmtip2tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip2tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip2tf2.setLineWrap(true);
/*      */     this.wmtip2tf2.setRows(5);
/*      */     this.wmtip2tf2.setTabSize(5);
/*      */     this.wmtip2tf2.setText("Increase your calorie intake: To gain weight, you need to consume more calories than you burn. Aim to consume 300-500 calories more than your daily caloric needs.");
/*      */     this.wmtip2tf2.setWrapStyleWord(true);
/*      */     this.wmtip2tf2.setBorder((Border)null);
/*      */     this.wmtip2tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip2tf2.setRequestFocusEnabled(false);
/*      */     this.wltip2scrl.setViewportView(this.wmtip2tf2);
/*      */     this.weightlosspnl.add(this.wltip2scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip3scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip3scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip3scrl.setOpaque(false);
/*      */     this.wmtip3tf2.setEditable(false);
/*      */     this.wmtip3tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip3tf2.setColumns(20);
/*      */     this.wmtip3tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip3tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip3tf2.setLineWrap(true);
/*      */     this.wmtip3tf2.setRows(5);
/*      */     this.wmtip3tf2.setTabSize(5);
/*      */     this.wmtip3tf2.setText("Eat healthy fats: Healthy fats are an important source of calories and can help promote weight gain. Good sources of healthy fats include avocado, nuts, seeds, olive oil, and fatty fish.");
/*      */     this.wmtip3tf2.setWrapStyleWord(true);
/*      */     this.wmtip3tf2.setBorder((Border)null);
/*      */     this.wmtip3tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip3tf2.setRequestFocusEnabled(false);
/*      */     this.wltip3scrl.setViewportView(this.wmtip3tf2);
/*      */     this.weightlosspnl.add(this.wltip3scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip4scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip4scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip4scrl.setOpaque(false);
/*      */     this.wmtip4tf2.setEditable(false);
/*      */     this.wmtip4tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip4tf2.setColumns(20);
/*      */     this.wmtip4tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip4tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip4tf2.setLineWrap(true);
/*      */     this.wmtip4tf2.setRows(5);
/*      */     this.wmtip4tf2.setTabSize(5);
/*      */     this.wmtip4tf2.setText("Snack on high-calorie foods: Snacking on high-calorie foods like nuts, dried fruit, and cheese can help increase your overall calorie intake.");
/*      */     this.wmtip4tf2.setWrapStyleWord(true);
/*      */     this.wmtip4tf2.setBorder((Border)null);
/*      */     this.wmtip4tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip4tf2.setRequestFocusEnabled(false);
/*      */     this.wltip4scrl.setViewportView(this.wmtip4tf2);
/*      */     this.weightlosspnl.add(this.wltip4scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip5scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip5scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip5scrl.setOpaque(false);
/*      */     this.wmtip5tf2.setEditable(false);
/*      */     this.wmtip5tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip5tf2.setColumns(20);
/*      */     this.wmtip5tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip5tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip5tf2.setLineWrap(true);
/*      */     this.wmtip5tf2.setRows(5);
/*      */     this.wmtip5tf2.setTabSize(5);
/*      */     this.wmtip5tf2.setText("Focus on protein-rich foods: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip5tf2.setWrapStyleWord(true);
/*      */     this.wmtip5tf2.setBorder((Border)null);
/*      */     this.wmtip5tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip5tf2.setRequestFocusEnabled(false);
/*      */     this.wltip5scrl.setViewportView(this.wmtip5tf2);
/*      */     this.weightlosspnl.add(this.wltip5scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip6scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip6scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip6scrl.setOpaque(false);
/*      */     this.wmtip6tf2.setEditable(false);
/*      */     this.wmtip6tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip6tf2.setColumns(20);
/*      */     this.wmtip6tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip6tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip6tf2.setLineWrap(true);
/*      */     this.wmtip6tf2.setRows(5);
/*      */     this.wmtip6tf2.setTabSize(5);
/*      */     this.wmtip6tf2.setText("Eat more frequently: Instead of eating three large meals, try to eat smaller, more frequent meals throughout the day. This can help increase your overall calorie intake.");
/*      */     this.wmtip6tf2.setWrapStyleWord(true);
/*      */     this.wmtip6tf2.setBorder((Border)null);
/*      */     this.wmtip6tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip6tf2.setRequestFocusEnabled(false);
/*      */     this.wltip6scrl.setViewportView(this.wmtip6tf2);
/*      */     this.weightlosspnl.add(this.wltip6scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip7scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip7scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip7scrl.setOpaque(false);
/*      */     this.wmtip7tf2.setEditable(false);
/*      */     this.wmtip7tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip7tf2.setColumns(20);
/*      */     this.wmtip7tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip7tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip7tf2.setLineWrap(true);
/*      */     this.wmtip7tf2.setRows(5);
/*      */     this.wmtip7tf2.setTabSize(5);
/*      */     this.wmtip7tf2.setText("Get enough sleep: Getting enough rest is important for overall health, but it can also help you gain weight by reducing stress levels and allowing your body to recover from exercise.");
/*      */     this.wmtip7tf2.setWrapStyleWord(true);
/*      */     this.wmtip7tf2.setBorder((Border)null);
/*      */     this.wmtip7tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip7tf2.setRequestFocusEnabled(false);
/*      */     this.wltip7scrl.setViewportView(this.wmtip7tf2);
/*      */     this.weightlosspnl.add(this.wltip7scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.wltip8scrl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip8scrl.setViewportBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.wltip8scrl.setOpaque(false);
/*      */     this.wmtip8tf2.setEditable(false);
/*      */     this.wmtip8tf2.setBackground(new Color(0, 0, 0, 0));
/*      */     this.wmtip8tf2.setColumns(20);
/*      */     this.wmtip8tf2.setFont(new Font("Arial", 3, 18));
/*      */     this.wmtip8tf2.setForeground(new Color(0, 0, 0));
/*      */     this.wmtip8tf2.setLineWrap(true);
/*      */     this.wmtip8tf2.setRows(5);
/*      */     this.wmtip8tf2.setTabSize(5);
/*      */     this.wmtip8tf2.setText("Include protein in your diet: Protein is important for building muscle mass, which can help you gain weight. Good sources of protein include meat, fish, eggs, dairy products, nuts, and legumes.");
/*      */     this.wmtip8tf2.setWrapStyleWord(true);
/*      */     this.wmtip8tf2.setBorder((Border)null);
/*      */     this.wmtip8tf2.setHighlighter((Highlighter)null);
/*      */     this.wmtip8tf2.setRequestFocusEnabled(false);
/*      */     this.wltip8scrl.setViewportView(this.wmtip8tf2);
/*      */     this.weightlosspnl.add(this.wltip8scrl, new AbsoluteConstraints(550, 270, 300, 170));
/*      */     this.jLabel128.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/lamp(1).png"));
/*      */     this.weightlosspnl.add(this.jLabel128, new AbsoluteConstraints(660, 180, -1, 70));
/*      */     this.weightlossbglbl.setFont(new Font("Arial", 1, 24));
/*      */     this.weightlossbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/pla (1).jpg"));
/*      */     this.weightlossbglbl.setText("jLabel36");
/*      */     this.weightlossbglbl.setPreferredSize(new Dimension(900, 660));
/*      */     this.weightlosspnl.add(this.weightlossbglbl, new AbsoluteConstraints(0, 0, -1, -1));
/*      */     this.dietpnl.add(this.weightlosspnl, new AbsoluteConstraints(0, 40, -1, -1));
/*      */     this.defaultpnl.add(this.dietpnl, new AbsoluteConstraints(0, 0, -1, 720));
/*      */     this.workoutpnl.setBackground(new Color(0, 0, 0));
/*      */     this.workoutpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.workoutpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.hmpnl.setBackground(new Color(0, 0, 0));
/*      */     this.hmpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.chestbtn.setBackground(new Color(204, 204, 204));
/*      */     this.chestbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.chestbtn.setForeground(new Color(0, 0, 0));
/*      */     this.chestbtn.setText("Chest");
/*      */     this.chestbtn.setBorderPainted(false);
/*      */     this.chestbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.chestbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.chestbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.chestbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.chestbtn, new AbsoluteConstraints(390, 140, -1, -1));
/*      */     this.tricepsbtn.setBackground(new Color(204, 204, 204));
/*      */     this.tricepsbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.tricepsbtn.setForeground(new Color(0, 0, 0));
/*      */     this.tricepsbtn.setText("Triceps");
/*      */     this.tricepsbtn.setBorderPainted(false);
/*      */     this.tricepsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.tricepsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepsbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.tricepsbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.tricepsbtn, new AbsoluteConstraints(440, 180, -1, -1));
/*      */     this.absbtn.setBackground(new Color(204, 204, 204));
/*      */     this.absbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.absbtn.setForeground(new Color(0, 0, 0));
/*      */     this.absbtn.setText("Abs");
/*      */     this.absbtn.setBorderPainted(false);
/*      */     this.absbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.absbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.absbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.absbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.absbtn, new AbsoluteConstraints(110, 230, 60, -1));
/*      */     this.bicepsbtn.setBackground(new Color(204, 204, 204));
/*      */     this.bicepsbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.bicepsbtn.setForeground(new Color(0, 0, 0));
/*      */     this.bicepsbtn.setText("Biceps");
/*      */     this.bicepsbtn.setBorderPainted(false);
/*      */     this.bicepsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.bicepsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.bicepsbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.bicepsbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.bicepsbtn, new AbsoluteConstraints(80, 190, 90, -1));
/*      */     this.shouldersbtn.setBackground(new Color(204, 204, 204));
/*      */     this.shouldersbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.shouldersbtn.setForeground(new Color(0, 0, 0));
/*      */     this.shouldersbtn.setText("Shoulders");
/*      */     this.shouldersbtn.setBorderPainted(false);
/*      */     this.shouldersbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.shouldersbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shouldersbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.shouldersbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.shouldersbtn, new AbsoluteConstraints(410, 80, -1, -1));
/*      */     this.forearmsbtn.setBackground(new Color(204, 204, 204));
/*      */     this.forearmsbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.forearmsbtn.setForeground(new Color(0, 0, 0));
/*      */     this.forearmsbtn.setText("Forearms");
/*      */     this.forearmsbtn.setBorderPainted(false);
/*      */     this.forearmsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.forearmsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.forearmsbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.forearmsbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.forearmsbtn, new AbsoluteConstraints(407, 250, -1, 20));
/*      */     this.quadsbtn.setBackground(new Color(204, 204, 204));
/*      */     this.quadsbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.quadsbtn.setForeground(new Color(0, 0, 0));
/*      */     this.quadsbtn.setText("Quads");
/*      */     this.quadsbtn.setBorderPainted(false);
/*      */     this.quadsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.quadsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadsbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.quadsbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.quadsbtn, new AbsoluteConstraints(400, 370, -1, -1));
/*      */     this.backbtn.setBackground(new Color(204, 204, 204));
/*      */     this.backbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.backbtn.setForeground(new Color(0, 0, 0));
/*      */     this.backbtn.setText("Back");
/*      */     this.backbtn.setBorderPainted(false);
/*      */     this.backbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.backbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.backbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.backbtn, new AbsoluteConstraints(750, 130, -1, -1));
/*      */     this.hamstrings.setBackground(new Color(204, 204, 204));
/*      */     this.hamstrings.setFont(new Font("Arial", 1, 14));
/*      */     this.hamstrings.setForeground(new Color(0, 0, 0));
/*      */     this.hamstrings.setText("Hamstrings");
/*      */     this.hamstrings.setBorderPainted(false);
/*      */     this.hamstrings.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.hamstringsMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.hamstrings.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.hamstringsActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.hamstrings, new AbsoluteConstraints(430, 410, -1, -1));
/*      */     this.calvesbtn.setBackground(new Color(204, 204, 204));
/*      */     this.calvesbtn.setFont(new Font("Arial", 1, 14));
/*      */     this.calvesbtn.setForeground(new Color(0, 0, 0));
/*      */     this.calvesbtn.setText("Calves");
/*      */     this.calvesbtn.setBorderPainted(false);
/*      */     this.calvesbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.calvesbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.calvesbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.calvesbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hmpnl.add(this.calvesbtn, new AbsoluteConstraints(720, 510, -1, -1));
/*      */     this.lastworklbl.setFont(new Font("Arial", 0, 18));
/*      */     this.lastworklbl.setForeground(new Color(204, 204, 204));
/*      */     this.lastworklbl.setText("Last Workout :");
/*      */     this.hmpnl.add(this.lastworklbl, new AbsoluteConstraints(20, 10, -1, -1));
/*      */     this.setworktf.setEditable(false);
/*      */     this.setworktf.setBackground(new Color(0, 0, 0));
/*      */     this.setworktf.setFont(new Font("Arial", 0, 18));
/*      */     this.setworktf.setForeground(new Color(204, 204, 204));
/*      */     this.setworktf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.hmpnl.add(this.setworktf, new AbsoluteConstraints(140, 10, -1, -1));
/*      */     this.humanbodybg.setBackground(new Color(0, 0, 0));
/*      */     this.humanbodybg.setFont(new Font("Arial", 1, 14));
/*      */     this.humanbodybg.setForeground(new Color(153, 153, 153));
/*      */     this.humanbodybg.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/Human modal.png"));
/*      */     this.hmpnl.add(this.humanbodybg, new AbsoluteConstraints(0, -20, -1, -1));
/*      */     this.workoutpnl.add(this.hmpnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.backpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.backbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.backbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.backbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.backbackbtn.setText("Back");
/*      */     this.backbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.backbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.backbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.backbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.backbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel107.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel107.setFont(new Font("Arial", 3, 24));
/*      */     this.jLabel107.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel107.setText("Back Workout");
/*      */     this.backpnl.add(this.jLabel107, new AbsoluteConstraints(340, -10, 280, 100));
/*      */     this.jLabel117.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel117.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel117.setText("Difficulty :  Easy ");
/*      */     this.backpnl.add(this.jLabel117, new AbsoluteConstraints(120, 530, -1, -1));
/*      */     this.dumbellrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.dumbellrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.dumbellrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.dumbellrowbtn.setText("Dumbell Row");
/*      */     this.dumbellrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.dumbellrowbtn.setDisplayedMnemonicIndex(0);
/*      */     this.dumbellrowbtn.setIconTextGap(0);
/*      */     this.dumbellrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.dumbellrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.dumbellrowbtn, new AbsoluteConstraints(40, 490, 150, 30));
/*      */     this.pullupsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.pullupsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.pullupsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.pullupsbtn.setText("Pullups");
/*      */     this.pullupsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.pullupsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.pullupsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.pullupsbtn, new AbsoluteConstraints(40, 70, 90, 30));
/*      */     this.jLabel118.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel118.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel118.setText("Difficulty :  Easy  ");
/*      */     this.backpnl.add(this.jLabel118, new AbsoluteConstraints(120, 110, -1, -1));
/*      */     this.deadliftbtn.setBackground(new Color(0, 0, 0));
/*      */     this.deadliftbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.deadliftbtn.setForeground(new Color(204, 204, 204));
/*      */     this.deadliftbtn.setText("Deadlift");
/*      */     this.deadliftbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.deadliftbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.deadliftbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.deadliftbtn, new AbsoluteConstraints(40, 140, 90, 30));
/*      */     this.jLabel119.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel119.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel119.setText("Difficulty : Hard ");
/*      */     this.backpnl.add(this.jLabel119, new AbsoluteConstraints(120, 180, -1, -1));
/*      */     this.seatedrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.seatedrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.seatedrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.seatedrowbtn.setText("Seated Row");
/*      */     this.seatedrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.seatedrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.seatedrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.seatedrowbtn, new AbsoluteConstraints(40, 210, 140, 30));
/*      */     this.jLabel120.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel120.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel120.setText("Difficulty :  Medium ");
/*      */     this.backpnl.add(this.jLabel120, new AbsoluteConstraints(120, 250, -1, -1));
/*      */     this.latpulldownbtn.setBackground(new Color(0, 0, 0));
/*      */     this.latpulldownbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.latpulldownbtn.setForeground(new Color(204, 204, 204));
/*      */     this.latpulldownbtn.setText("Latpull Down");
/*      */     this.latpulldownbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.latpulldownbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.latpulldownbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.latpulldownbtn, new AbsoluteConstraints(40, 280, 150, 30));
/*      */     this.jLabel121.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel121.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel121.setText("Difficulty :  Medium ");
/*      */     this.backpnl.add(this.jLabel121, new AbsoluteConstraints(120, 320, -1, -1));
/*      */     this.tbarrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.tbarrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.tbarrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.tbarrowbtn.setText("Tbar Row");
/*      */     this.tbarrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.tbarrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.tbarrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.tbarrowbtn, new AbsoluteConstraints(40, 350, -1, 30));
/*      */     this.jLabel122.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel122.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel122.setText("Difficulty :  Medium ");
/*      */     this.backpnl.add(this.jLabel122, new AbsoluteConstraints(120, 390, -1, -1));
/*      */     this.bentrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.bentrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.bentrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.bentrowbtn.setText("Bentover BarRow");
/*      */     this.bentrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.bentrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.bentrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.backpnl.add(this.bentrowbtn, new AbsoluteConstraints(40, 420, 190, 30));
/*      */     this.jLabel123.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel123.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel123.setText("Difficulty :  Hard ");
/*      */     this.backpnl.add(this.jLabel123, new AbsoluteConstraints(120, 460, -1, -1));
/*      */     this.lastperformedtf.setEditable(false);
/*      */     this.lastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.lastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.lastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.lastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.lastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.backpnl.add(this.lastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.backworklbl.setFont(new Font("Arial", 0, 24));
/*      */     this.backworklbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.backworklbl.setText("jLabel2");
/*      */     this.backpnl.add(this.backworklbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.backpnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.chestpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.chestbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.chestbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.chestbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.chestbackbtn.setText("Back");
/*      */     this.chestbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.chestbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.chestbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.chestbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.chestbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.chestbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel109.setFont(new Font("Arial", 3, 24));
/*      */     this.jLabel109.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel109.setText("Chest Workout");
/*      */     this.chestpnl.add(this.jLabel109, new AbsoluteConstraints(340, -10, 280, 100));
/*      */     this.landminebtn.setBackground(new Color(0, 0, 0));
/*      */     this.landminebtn.setFont(new Font("Arial", 0, 24));
/*      */     this.landminebtn.setForeground(new Color(204, 204, 204));
/*      */     this.landminebtn.setText("Landmine Chestpress");
/*      */     this.landminebtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.landminebtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.landminebtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.landminebtn, new AbsoluteConstraints(40, 350, 270, 30));
/*      */     this.jLabel85.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel85.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel85.setText("Difficulty : Easy ");
/*      */     this.chestpnl.add(this.jLabel85, new AbsoluteConstraints(130, 390, -1, -1));
/*      */     this.chestdipsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.chestdipsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.chestdipsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.chestdipsbtn.setText("Chest Dips");
/*      */     this.chestdipsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.chestdipsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.chestdipsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.chestdipsbtn, new AbsoluteConstraints(40, 70, 150, 30));
/*      */     this.jLabel124.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel124.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel124.setText("Difficulty : Easy ");
/*      */     this.chestpnl.add(this.jLabel124, new AbsoluteConstraints(130, 110, -1, -1));
/*      */     this.cableflybtn.setBackground(new Color(0, 0, 0));
/*      */     this.cableflybtn.setFont(new Font("Arial", 0, 24));
/*      */     this.cableflybtn.setForeground(new Color(204, 204, 204));
/*      */     this.cableflybtn.setText("Cable Fliyers");
/*      */     this.cableflybtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.cableflybtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.cableflybtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.cableflybtn, new AbsoluteConstraints(40, 140, 180, 30));
/*      */     this.jLabel125.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel125.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel125.setText("Difficulty : Medium ");
/*      */     this.chestpnl.add(this.jLabel125, new AbsoluteConstraints(130, 180, -1, -1));
/*      */     this.dumbellpressbtn.setBackground(new Color(0, 0, 0));
/*      */     this.dumbellpressbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.dumbellpressbtn.setForeground(new Color(204, 204, 204));
/*      */     this.dumbellpressbtn.setText("Dumbell Bench Press");
/*      */     this.dumbellpressbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.dumbellpressbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.dumbellpressbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.dumbellpressbtn, new AbsoluteConstraints(40, 210, 270, 30));
/*      */     this.jLabel126.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel126.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel126.setText("Difficulty : Easy ");
/*      */     this.chestpnl.add(this.jLabel126, new AbsoluteConstraints(130, 250, -1, -1));
/*      */     this.inclinepressbtn.setBackground(new Color(0, 0, 0));
/*      */     this.inclinepressbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.inclinepressbtn.setForeground(new Color(204, 204, 204));
/*      */     this.inclinepressbtn.setText("Incline Dumbell Press");
/*      */     this.inclinepressbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.inclinepressbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.inclinepressbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.chestpnl.add(this.inclinepressbtn, new AbsoluteConstraints(40, 280, 270, 30));
/*      */     this.jLabel127.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel127.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel127.setText("Difficulty : Medium ");
/*      */     this.chestpnl.add(this.jLabel127, new AbsoluteConstraints(130, 320, -1, -1));
/*      */     this.clastperformedtf.setEditable(false);
/*      */     this.clastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.clastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.clastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.clastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.clastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.chestpnl.add(this.clastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.chestbglbl.setForeground(new Color(204, 204, 204));
/*      */     this.chestbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.chestbglbl.setText("jLabel2");
/*      */     this.chestbglbl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.chestpnl.add(this.chestbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.chestpnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.bicepspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.bicepsbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.bicepsbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.bicepsbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.bicepsbackbtn.setText("Back");
/*      */     this.bicepsbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.bicepsbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.bicepsbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.bicepsbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.bicepsbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.bicepsbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel108.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel108.setFont(new Font("Arial", 3, 24));
/*      */     this.jLabel108.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel108.setText("Bicep Workout");
/*      */     this.bicepspnl.add(this.jLabel108, new AbsoluteConstraints(340, -10, 280, 100));
/*      */     this.bilastperformedtf.setEditable(false);
/*      */     this.bilastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.bilastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.bilastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.bilastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.bilastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.bicepspnl.add(this.bilastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.chinupbtn.setBackground(new Color(0, 0, 0));
/*      */     this.chinupbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.chinupbtn.setForeground(new Color(204, 204, 204));
/*      */     this.chinupbtn.setText("Chin ups :");
/*      */     this.chinupbtn.setToolTipText("");
/*      */     this.chinupbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.chinupbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.chinupbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.chinupbtn, new AbsoluteConstraints(40, 90, -1, -1));
/*      */     this.jLabel2.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel2.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel2.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel2.setText("Difficulty : Easy");
/*      */     this.bicepspnl.add(this.jLabel2, new AbsoluteConstraints(120, 140, -1, -1));
/*      */     this.concurls.setBackground(new Color(0, 0, 0));
/*      */     this.concurls.setFont(new Font("Arial", 0, 24));
/*      */     this.concurls.setForeground(new Color(204, 204, 204));
/*      */     this.concurls.setText("Concentration curls :");
/*      */     this.concurls.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.concurls.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.concurlsActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.concurls, new AbsoluteConstraints(40, 280, -1, -1));
/*      */     this.jLabel36.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel36.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel36.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel36.setText("Difficulty : Easy");
/*      */     this.bicepspnl.add(this.jLabel36, new AbsoluteConstraints(120, 230, -1, -1));
/*      */     this.inclinedumbbtn.setBackground(new Color(0, 0, 0));
/*      */     this.inclinedumbbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.inclinedumbbtn.setForeground(new Color(204, 204, 204));
/*      */     this.inclinedumbbtn.setText("Incline dumbbell curls :");
/*      */     this.inclinedumbbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.inclinedumbbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.inclinedumbbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.inclinedumbbtn, new AbsoluteConstraints(40, 180, -1, -1));
/*      */     this.jLabel79.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel79.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel79.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel79.setText("Difficulty : Hard");
/*      */     this.bicepspnl.add(this.jLabel79, new AbsoluteConstraints(120, 330, -1, -1));
/*      */     this.reversebarbtn.setBackground(new Color(0, 0, 0));
/*      */     this.reversebarbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.reversebarbtn.setForeground(new Color(204, 204, 204));
/*      */     this.reversebarbtn.setText("Reverse bar curls :");
/*      */     this.reversebarbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.reversebarbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.reversebarbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.reversebarbtn, new AbsoluteConstraints(40, 370, -1, -1));
/*      */     this.jLabel100.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel100.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel100.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel100.setText("Difficulty : Intermidiate");
/*      */     this.bicepspnl.add(this.jLabel100, new AbsoluteConstraints(120, 410, -1, -1));
/*      */     this.bicepbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.bicepbglbl.setText("jLabel2");
/*      */     this.bicepbglbl.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.bicepbglblMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.bicepspnl.add(this.bicepbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.bicepspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.tricepspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.tricepsbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.tricepsbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.tricepsbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.tricepsbackbtn.setText("Back");
/*      */     this.tricepsbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.tricepsbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.tricepsbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepsbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.tricepsbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.tricepsbackbtn, new AbsoluteConstraints(340, 600, 110, -1));
/*      */     this.tricepstitlelbl.setBackground(new Color(0, 0, 0));
/*      */     this.tricepstitlelbl.setFont(new Font("Arial", 3, 24));
/*      */     this.tricepstitlelbl.setForeground(new Color(204, 204, 204));
/*      */     this.tricepstitlelbl.setText("Triceps Workout");
/*      */     this.tricepspnl.add(this.tricepstitlelbl, new AbsoluteConstraints(340, -10, 280, 100));
/*      */     this.closegrip.setBackground(new Color(0, 0, 0));
/*      */     this.closegrip.setFont(new Font("Arial", 0, 24));
/*      */     this.closegrip.setForeground(new Color(204, 204, 204));
/*      */     this.closegrip.setText("Close grip bench press");
/*      */     this.closegrip.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.closegrip.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.closegripMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.closegrip, new AbsoluteConstraints(40, 70, 270, 50));
/*      */     this.closegriplbl.setBackground(new Color(0, 0, 0));
/*      */     this.closegriplbl.setFont(new Font("Arial", 0, 18));
/*      */     this.closegriplbl.setForeground(new Color(204, 204, 204));
/*      */     this.closegriplbl.setText("Difficulty : Easy");
/*      */     this.tricepspnl.add(this.closegriplbl, new AbsoluteConstraints(150, 120, -1, -1));
/*      */     this.dipsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.dipsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.dipsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.dipsbtn.setText("Dips");
/*      */     this.dipsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.dipsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.dipsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.dipsbtn, new AbsoluteConstraints(50, 140, 50, 30));
/*      */     this.dipslbl.setBackground(new Color(0, 0, 0));
/*      */     this.dipslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.dipslbl.setForeground(new Color(204, 204, 204));
/*      */     this.dipslbl.setText("Difficulty : Intermidiate");
/*      */     this.tricepspnl.add(this.dipslbl, new AbsoluteConstraints(150, 180, -1, -1));
/*      */     this.dubbellkickbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.dubbellkickbackbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.dubbellkickbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.dubbellkickbackbtn.setText("Dubbell kickback");
/*      */     this.dubbellkickbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.dubbellkickbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.dubbellkickbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.dubbellkickbackbtn, new AbsoluteConstraints(50, 220, -1, -1));
/*      */     this.dubbellkickbacklbl.setBackground(new Color(0, 0, 0));
/*      */     this.dubbellkickbacklbl.setFont(new Font("Arial", 0, 18));
/*      */     this.dubbellkickbacklbl.setForeground(new Color(204, 204, 204));
/*      */     this.dubbellkickbacklbl.setText("Difficulty : Intermidiate");
/*      */     this.tricepspnl.add(this.dubbellkickbacklbl, new AbsoluteConstraints(150, 260, -1, -1));
/*      */     this.frenchcurlbtn.setBackground(new Color(0, 0, 0));
/*      */     this.frenchcurlbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.frenchcurlbtn.setForeground(new Color(204, 204, 204));
/*      */     this.frenchcurlbtn.setText("French curl");
/*      */     this.frenchcurlbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.frenchcurlbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.frenchcurlbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.frenchcurlbtn, new AbsoluteConstraints(50, 290, -1, -1));
/*      */     this.frenchcurllbl.setBackground(new Color(0, 0, 0));
/*      */     this.frenchcurllbl.setFont(new Font("Arial", 0, 18));
/*      */     this.frenchcurllbl.setForeground(new Color(204, 204, 204));
/*      */     this.frenchcurllbl.setText("Difficulty : Intermidiate");
/*      */     this.tricepspnl.add(this.frenchcurllbl, new AbsoluteConstraints(150, 330, -1, -1));
/*      */     this.revercegripbtn.setBackground(new Color(0, 0, 0));
/*      */     this.revercegripbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.revercegripbtn.setForeground(new Color(204, 204, 204));
/*      */     this.revercegripbtn.setText("Reverse grip cable extension");
/*      */     this.revercegripbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.revercegripbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.revercegripbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.revercegripbtn, new AbsoluteConstraints(50, 360, -1, -1));
/*      */     this.reversegriplbl.setBackground(new Color(0, 0, 0));
/*      */     this.reversegriplbl.setFont(new Font("Arial", 0, 18));
/*      */     this.reversegriplbl.setForeground(new Color(204, 204, 204));
/*      */     this.reversegriplbl.setText("Difficulty : Easy");
/*      */     this.tricepspnl.add(this.reversegriplbl, new AbsoluteConstraints(150, 400, -1, -1));
/*      */     this.skullcrusherbtn.setBackground(new Color(0, 0, 0));
/*      */     this.skullcrusherbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.skullcrusherbtn.setForeground(new Color(204, 204, 204));
/*      */     this.skullcrusherbtn.setText("Skullcrusher");
/*      */     this.skullcrusherbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.skullcrusherbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.skullcrusherbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.skullcrusherbtn, new AbsoluteConstraints(50, 430, -1, -1));
/*      */     this.skullcrusherlbl.setBackground(new Color(0, 0, 0));
/*      */     this.skullcrusherlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.skullcrusherlbl.setForeground(new Color(204, 204, 204));
/*      */     this.skullcrusherlbl.setText("Difficulty : Easy");
/*      */     this.tricepspnl.add(this.skullcrusherlbl, new AbsoluteConstraints(150, 470, -1, -1));
/*      */     this.triceppushdownbtn.setBackground(new Color(0, 0, 0));
/*      */     this.triceppushdownbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.triceppushdownbtn.setForeground(new Color(204, 204, 204));
/*      */     this.triceppushdownbtn.setText("Triceps pushdown");
/*      */     this.triceppushdownbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.triceppushdownbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.triceppushdownbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.tricepspnl.add(this.triceppushdownbtn, new AbsoluteConstraints(40, 510, 210, -1));
/*      */     this.jLabel110.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel110.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel110.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel110.setText("Difficulty : Easy");
/*      */     this.tricepspnl.add(this.jLabel110, new AbsoluteConstraints(150, 550, -1, -1));
/*      */     this.tlastperformedtf.setEditable(false);
/*      */     this.tlastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.tlastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.tlastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.tlastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.tlastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.tricepspnl.add(this.tlastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.tricepsbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.tricepspnl.add(this.tricepsbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.tricepspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.shoulderpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.shoulderbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.shoulderbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.shoulderbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.shoulderbackbtn.setText("Back");
/*      */     this.shoulderbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.shoulderbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.shoulderbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.shoulderbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.shoulderbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.shouldertitlelbl.setBackground(new Color(0, 0, 0));
/*      */     this.shouldertitlelbl.setFont(new Font("Arial", 3, 24));
/*      */     this.shouldertitlelbl.setForeground(new Color(204, 204, 204));
/*      */     this.shouldertitlelbl.setText("Shoulders workout");
/*      */     this.shoulderpnl.add(this.shouldertitlelbl, new AbsoluteConstraints(340, -10, 240, 100));
/*      */     this.barbellhighrow.setBackground(new Color(0, 0, 0));
/*      */     this.barbellhighrow.setFont(new Font("Arial", 0, 24));
/*      */     this.barbellhighrow.setForeground(new Color(204, 204, 204));
/*      */     this.barbellhighrow.setText("BarBell high row");
/*      */     this.barbellhighrow.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.barbellhighrow.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.barbellhighrowMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.barbellhighrow.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.barbellhighrowActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.barbellhighrow, new AbsoluteConstraints(40, 100, -1, -1));
/*      */     this.barbellhighrowlbl1.setBackground(new Color(0, 0, 0));
/*      */     this.barbellhighrowlbl1.setFont(new Font("Arial", 0, 18));
/*      */     this.barbellhighrowlbl1.setForeground(new Color(204, 204, 204));
/*      */     this.barbellhighrowlbl1.setText("Difficulty : Hard");
/*      */     this.shoulderpnl.add(this.barbellhighrowlbl1, new AbsoluteConstraints(150, 140, -1, -1));
/*      */     this.facepullsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.facepullsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.facepullsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.facepullsbtn.setText("Face pulls");
/*      */     this.facepullsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.facepullsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.facepullsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.facepullsbtn, new AbsoluteConstraints(40, 180, -1, -1));
/*      */     this.facepulllbl.setBackground(new Color(0, 0, 0));
/*      */     this.facepulllbl.setFont(new Font("Arial", 0, 18));
/*      */     this.facepulllbl.setForeground(new Color(204, 204, 204));
/*      */     this.facepulllbl.setText("Difficulty : Easy");
/*      */     this.shoulderpnl.add(this.facepulllbl, new AbsoluteConstraints(150, 220, -1, -1));
/*      */     this.inclinedumbbellhighrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.inclinedumbbellhighrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.inclinedumbbellhighrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.inclinedumbbellhighrowbtn.setText("Incline dumbbell high row");
/*      */     this.inclinedumbbellhighrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.inclinedumbbellhighrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.inclinedumbbellhighrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.inclinedumbbellhighrowbtn, new AbsoluteConstraints(40, 260, -1, -1));
/*      */     this.inclinedubbellhighrowlbl.setBackground(new Color(0, 0, 0));
/*      */     this.inclinedubbellhighrowlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.inclinedubbellhighrowlbl.setForeground(new Color(204, 204, 204));
/*      */     this.inclinedubbellhighrowlbl.setText("Difficulty : Hard");
/*      */     this.shoulderpnl.add(this.inclinedubbellhighrowlbl, new AbsoluteConstraints(150, 380, -1, -1));
/*      */     this.Knellingcabellatpulldobtnwn.setBackground(new Color(0, 0, 0));
/*      */     this.Knellingcabellatpulldobtnwn.setFont(new Font("Arial", 0, 24));
/*      */     this.Knellingcabellatpulldobtnwn.setForeground(new Color(204, 204, 204));
/*      */     this.Knellingcabellatpulldobtnwn.setText("Knelling cabel lat pulldown");
/*      */     this.Knellingcabellatpulldobtnwn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.Knellingcabellatpulldobtnwn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.KnellingcabellatpulldobtnwnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.Knellingcabellatpulldobtnwn, new AbsoluteConstraints(40, 340, -1, -1));
/*      */     this.inclinedubbellhighrow.setBackground(new Color(0, 0, 0));
/*      */     this.inclinedubbellhighrow.setFont(new Font("Arial", 0, 18));
/*      */     this.inclinedubbellhighrow.setForeground(new Color(204, 204, 204));
/*      */     this.inclinedubbellhighrow.setText("Difficulty : Hard");
/*      */     this.shoulderpnl.add(this.inclinedubbellhighrow, new AbsoluteConstraints(150, 300, -1, -1));
/*      */     this.Longangledumbbellrowbtn.setBackground(new Color(0, 0, 0));
/*      */     this.Longangledumbbellrowbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.Longangledumbbellrowbtn.setForeground(new Color(204, 204, 204));
/*      */     this.Longangledumbbellrowbtn.setText("Long angle dumbbell row");
/*      */     this.Longangledumbbellrowbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.Longangledumbbellrowbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.LongangledumbbellrowbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.Longangledumbbellrowbtn, new AbsoluteConstraints(40, 410, -1, -1));
/*      */     this.longangledubbellrowlbl.setBackground(new Color(0, 0, 0));
/*      */     this.longangledubbellrowlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.longangledubbellrowlbl.setForeground(new Color(204, 204, 204));
/*      */     this.longangledubbellrowlbl.setText("Difficulty : Hard");
/*      */     this.shoulderpnl.add(this.longangledubbellrowlbl, new AbsoluteConstraints(150, 450, -1, -1));
/*      */     this.weightedskydiverbtn.setBackground(new Color(0, 0, 0));
/*      */     this.weightedskydiverbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.weightedskydiverbtn.setForeground(new Color(204, 204, 204));
/*      */     this.weightedskydiverbtn.setText("Weighted skydiver");
/*      */     this.weightedskydiverbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.weightedskydiverbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.weightedskydiverbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.shoulderpnl.add(this.weightedskydiverbtn, new AbsoluteConstraints(40, 480, -1, -1));
/*      */     this.jLabel101.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel101.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel101.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel101.setText("Difficulty : Intermidiate");
/*      */     this.shoulderpnl.add(this.jLabel101, new AbsoluteConstraints(150, 520, -1, -1));
/*      */     this.slastperformedtf.setEditable(false);
/*      */     this.slastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.slastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.slastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.slastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.slastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.shoulderpnl.add(this.slastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.shouldersbglbl.setForeground(new Color(204, 204, 204));
/*      */     this.shouldersbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.shouldersbglbl.setText("jLabel2");
/*      */     this.shoulderpnl.add(this.shouldersbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.shoulderpnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.forearmspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.forearmbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.forearmbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.forearmbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.forearmbackbtn.setText("Back");
/*      */     this.forearmbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.forearmbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.forearmbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.forearmbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.forearmbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.forearmspnl.add(this.forearmbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel112.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel112.setFont(new Font("Arial", 0, 36));
/*      */     this.jLabel112.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel112.setText("Forearms workout");
/*      */     this.forearmspnl.add(this.jLabel112, new AbsoluteConstraints(300, -10, 320, 100));
/*      */     this.flastperformedtf.setEditable(false);
/*      */     this.flastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.flastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.flastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.flastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.flastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.forearmspnl.add(this.flastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.Farmerswalkbtn.setBackground(new Color(0, 0, 0));
/*      */     this.Farmerswalkbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.Farmerswalkbtn.setForeground(new Color(204, 204, 204));
/*      */     this.Farmerswalkbtn.setText("Farmers walk :");
/*      */     this.Farmerswalkbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.Farmerswalkbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.FarmerswalkbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.forearmspnl.add(this.Farmerswalkbtn, new AbsoluteConstraints(40, 100, -1, -1));
/*      */     this.jLabel102.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel102.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel102.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel102.setText("Difficulty : Easy");
/*      */     this.forearmspnl.add(this.jLabel102, new AbsoluteConstraints(140, 150, -1, -1));
/*      */     this.jButton10.setBackground(new Color(0, 0, 0));
/*      */     this.jButton10.setFont(new Font("Arial", 0, 24));
/*      */     this.jButton10.setForeground(new Color(204, 204, 204));
/*      */     this.jButton10.setText("Wrist roller :");
/*      */     this.jButton10.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.jButton10.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.jButton10MouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.forearmspnl.add(this.jButton10, new AbsoluteConstraints(40, 200, -1, -1));
/*      */     this.jLabel111.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel111.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel111.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel111.setText("Difficulty : Easy");
/*      */     this.forearmspnl.add(this.jLabel111, new AbsoluteConstraints(140, 250, -1, -1));
/*      */     this.forearmbglbl.setForeground(new Color(204, 204, 204));
/*      */     this.forearmbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.forearmbglbl.setText("jLabel2");
/*      */     this.forearmspnl.add(this.forearmbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.forearmspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.quadspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.quadsbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.quadsbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.quadsbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.quadsbackbtn.setText("Back");
/*      */     this.quadsbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.quadsbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.quadsbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadsbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.quadsbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.quadsbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.quadsworkoutlbl.setBackground(new Color(0, 0, 0));
/*      */     this.quadsworkoutlbl.setFont(new Font("Arial", 3, 24));
/*      */     this.quadsworkoutlbl.setForeground(new Color(204, 204, 204));
/*      */     this.quadsworkoutlbl.setText("Quads workout");
/*      */     this.quadspnl.add(this.quadsworkoutlbl, new AbsoluteConstraints(340, -10, 200, 100));
/*      */     this.bulgariansplitsquadbtn.setBackground(new Color(0, 0, 0));
/*      */     this.bulgariansplitsquadbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.bulgariansplitsquadbtn.setForeground(new Color(204, 204, 204));
/*      */     this.bulgariansplitsquadbtn.setText("Bulgarian split squad");
/*      */     this.bulgariansplitsquadbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.bulgariansplitsquadbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.bulgariansplitsquadbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.bulgariansplitsquadbtn, new AbsoluteConstraints(40, 100, -1, -1));
/*      */     this.bulgariansplitsquadlbl.setBackground(new Color(0, 0, 0));
/*      */     this.bulgariansplitsquadlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.bulgariansplitsquadlbl.setForeground(new Color(204, 204, 204));
/*      */     this.bulgariansplitsquadlbl.setText("Difficulty : Hard");
/*      */     this.quadspnl.add(this.bulgariansplitsquadlbl, new AbsoluteConstraints(150, 140, -1, -1));
/*      */     this.frontsquatbtn.setBackground(new Color(0, 0, 0));
/*      */     this.frontsquatbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.frontsquatbtn.setForeground(new Color(204, 204, 204));
/*      */     this.frontsquatbtn.setText("Front squat");
/*      */     this.frontsquatbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.frontsquatbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.frontsquatbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.frontsquatbtn, new AbsoluteConstraints(40, 180, -1, -1));
/*      */     this.frontsquatlbl.setBackground(new Color(0, 0, 0));
/*      */     this.frontsquatlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.frontsquatlbl.setForeground(new Color(204, 204, 204));
/*      */     this.frontsquatlbl.setText("Difficulty : Hard");
/*      */     this.quadspnl.add(this.frontsquatlbl, new AbsoluteConstraints(150, 220, -1, -1));
/*      */     this.legextensionbtn.setBackground(new Color(0, 0, 0));
/*      */     this.legextensionbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.legextensionbtn.setForeground(new Color(204, 204, 204));
/*      */     this.legextensionbtn.setText("Leg extension");
/*      */     this.legextensionbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.legextensionbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.legextensionbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.legextensionbtn, new AbsoluteConstraints(40, 260, -1, -1));
/*      */     this.legextensionlbl.setBackground(new Color(0, 0, 0));
/*      */     this.legextensionlbl.setFont(new Font("Arial", 0, 18));
/*      */     this.legextensionlbl.setForeground(new Color(204, 204, 204));
/*      */     this.legextensionlbl.setText("Difficulty : Hard");
/*      */     this.quadspnl.add(this.legextensionlbl, new AbsoluteConstraints(150, 300, -1, -1));
/*      */     this.machinepressbtn.setBackground(new Color(0, 0, 0));
/*      */     this.machinepressbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.machinepressbtn.setForeground(new Color(204, 204, 204));
/*      */     this.machinepressbtn.setText("Machine press");
/*      */     this.machinepressbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.machinepressbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.machinepressbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.machinepressbtn, new AbsoluteConstraints(40, 350, -1, -1));
/*      */     this.machinepresslbl.setBackground(new Color(0, 0, 0));
/*      */     this.machinepresslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.machinepresslbl.setForeground(new Color(204, 204, 204));
/*      */     this.machinepresslbl.setText("Difficulty : Hard");
/*      */     this.quadspnl.add(this.machinepresslbl, new AbsoluteConstraints(150, 400, -1, -1));
/*      */     this.squatsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.squatsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.squatsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.squatsbtn.setText("Squats");
/*      */     this.squatsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.squatsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.squatsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.quadspnl.add(this.squatsbtn, new AbsoluteConstraints(40, 450, -1, -1));
/*      */     this.squatslbl.setBackground(new Color(0, 0, 0));
/*      */     this.squatslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.squatslbl.setForeground(new Color(204, 204, 204));
/*      */     this.squatslbl.setText("Difficulty : Easy");
/*      */     this.quadspnl.add(this.squatslbl, new AbsoluteConstraints(150, 480, -1, -1));
/*      */     this.qlastperformedtf.setEditable(false);
/*      */     this.qlastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.qlastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.qlastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.qlastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.qlastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.quadspnl.add(this.qlastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.quadsbglbl.setForeground(new Color(204, 204, 204));
/*      */     this.quadsbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.quadsbglbl.setText("jLabel2");
/*      */     this.quadspnl.add(this.quadsbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.quadspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.hamspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.hamsbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.hamsbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.hamsbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.hamsbackbtn.setText("Back");
/*      */     this.hamsbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.hamsbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.hamsbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.hamsbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.hamsbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.hamspnl.add(this.hamsbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel114.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel114.setFont(new Font("Arial", 0, 24));
/*      */     this.jLabel114.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel114.setText("Hamstrings workout");
/*      */     this.hamspnl.add(this.jLabel114, new AbsoluteConstraints(340, -10, 260, 100));
/*      */     this.hlastperformedtf.setEditable(false);
/*      */     this.hlastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.hlastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.hlastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.hlastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.hlastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.hamspnl.add(this.hlastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.siitedlegpushbtn.setBackground(new Color(0, 0, 0));
/*      */     this.siitedlegpushbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.siitedlegpushbtn.setForeground(new Color(204, 204, 204));
/*      */     this.siitedlegpushbtn.setText("Sitted leg push :");
/*      */     this.siitedlegpushbtn.setToolTipText("");
/*      */     this.siitedlegpushbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.siitedlegpushbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.siitedlegpushbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.hamspnl.add(this.siitedlegpushbtn, new AbsoluteConstraints(40, 100, -1, -1));
/*      */     this.jLabel103.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel103.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel103.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel103.setText("Difficulty : Intermidiate");
/*      */     this.hamspnl.add(this.jLabel103, new AbsoluteConstraints(140, 160, -1, -1));
/*      */     this.standinghamstringsbtn.setBackground(new Color(0, 0, 0));
/*      */     this.standinghamstringsbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.standinghamstringsbtn.setForeground(new Color(204, 204, 204));
/*      */     this.standinghamstringsbtn.setText("Standing hamstring leg curl :");
/*      */     this.standinghamstringsbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.standinghamstringsbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.standinghamstringsbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.hamspnl.add(this.standinghamstringsbtn, new AbsoluteConstraints(40, 210, -1, -1));
/*      */     this.jLabel104.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel104.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel104.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel104.setText("Difficulty : Intermidiate");
/*      */     this.hamspnl.add(this.jLabel104, new AbsoluteConstraints(140, 260, -1, -1));
/*      */     this.stifflegliftbtn.setBackground(new Color(0, 0, 0));
/*      */     this.stifflegliftbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.stifflegliftbtn.setForeground(new Color(204, 204, 204));
/*      */     this.stifflegliftbtn.setText("Stiff leg lift :");
/*      */     this.stifflegliftbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.stifflegliftbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.stifflegliftbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.hamspnl.add(this.stifflegliftbtn, new AbsoluteConstraints(40, 310, -1, -1));
/*      */     this.jLabel105.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel105.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel105.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel105.setText("Difficulty : Hard");
/*      */     this.hamspnl.add(this.jLabel105, new AbsoluteConstraints(140, 360, -1, -1));
/*      */     this.hamstringsbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.hamstringsbglbl.setText("jLabel2");
/*      */     this.hamspnl.add(this.hamstringsbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.hamspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.abspnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.absbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.absbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.absbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.absbackbtn.setText("Back");
/*      */     this.absbackbtn.setBorder(BorderFactory.createBevelBorder(0));
/*      */     this.absbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.absbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.absbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.absbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.abspnl.add(this.absbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.jLabel116.setFont(new Font("Arial", 3, 24));
/*      */     this.jLabel116.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel116.setText("Abs Workout");
/*      */     this.abspnl.add(this.jLabel116, new AbsoluteConstraints(340, -10, 200, 100));
/*      */     this.jackknivesbtn.setBackground(new Color(0, 0, 0));
/*      */     this.jackknivesbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.jackknivesbtn.setForeground(new Color(204, 204, 204));
/*      */     this.jackknivesbtn.setText("JackKnives");
/*      */     this.jackknivesbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.jackknivesbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.jackknivesbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.abspnl.add(this.jackknivesbtn, new AbsoluteConstraints(40, 80, -1, -1));
/*      */     this.jackkniveslbl.setBackground(new Color(0, 0, 0));
/*      */     this.jackkniveslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.jackkniveslbl.setForeground(new Color(204, 204, 204));
/*      */     this.jackkniveslbl.setText("Difficulty : Easy");
/*      */     this.abspnl.add(this.jackkniveslbl, new AbsoluteConstraints(100, 120, -1, -1));
/*      */     this.longcrunchesbtn.setBackground(new Color(0, 0, 0));
/*      */     this.longcrunchesbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.longcrunchesbtn.setForeground(new Color(204, 204, 204));
/*      */     this.longcrunchesbtn.setText("Long crunches");
/*      */     this.longcrunchesbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.abspnl.add(this.longcrunchesbtn, new AbsoluteConstraints(40, 160, -1, -1));
/*      */     this.jLabel106.setBackground(new Color(0, 0, 0));
/*      */     this.jLabel106.setFont(new Font("Arial", 0, 18));
/*      */     this.jLabel106.setForeground(new Color(204, 204, 204));
/*      */     this.jLabel106.setText("Difficulty : Easy");
/*      */     this.abspnl.add(this.jLabel106, new AbsoluteConstraints(100, 200, -1, -1));
/*      */     this.lankbtn.setBackground(new Color(0, 0, 0));
/*      */     this.lankbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.lankbtn.setForeground(new Color(204, 204, 204));
/*      */     this.lankbtn.setText("Plank");
/*      */     this.lankbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.lankbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.lankbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.abspnl.add(this.lankbtn, new AbsoluteConstraints(40, 240, -1, -1));
/*      */     this.planklbl.setBackground(new Color(0, 0, 0));
/*      */     this.planklbl.setFont(new Font("Arial", 0, 18));
/*      */     this.planklbl.setForeground(new Color(204, 204, 204));
/*      */     this.planklbl.setText("Difficulty : Easy");
/*      */     this.abspnl.add(this.planklbl, new AbsoluteConstraints(100, 280, -1, -1));
/*      */     this.jButton1.setBackground(new Color(0, 0, 0));
/*      */     this.jButton1.setFont(new Font("Arial", 0, 24));
/*      */     this.jButton1.setForeground(new Color(204, 204, 204));
/*      */     this.jButton1.setText("V sitsups");
/*      */     this.jButton1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.abspnl.add(this.jButton1, new AbsoluteConstraints(40, 310, -1, -1));
/*      */     this.vsitupslbl.setBackground(new Color(0, 0, 0));
/*      */     this.vsitupslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.vsitupslbl.setForeground(new Color(204, 204, 204));
/*      */     this.vsitupslbl.setText("Difficulty : Easy");
/*      */     this.abspnl.add(this.vsitupslbl, new AbsoluteConstraints(100, 350, -1, -1));
/*      */     this.alastperformedtf.setEditable(false);
/*      */     this.alastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.alastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.alastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.alastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.alastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.abspnl.add(this.alastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.absbglbl.setForeground(new Color(204, 204, 204));
/*      */     this.absbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.absbglbl.setText("jLabel2");
/*      */     this.abspnl.add(this.absbglbl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.workoutpnl.add(this.abspnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.calvespnl.setForeground(new Color(204, 204, 204));
/*      */     this.calvespnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.calvesbackbtn.setBackground(new Color(0, 0, 0));
/*      */     this.calvesbackbtn.setFont(new Font("Arial", 0, 18));
/*      */     this.calvesbackbtn.setForeground(new Color(204, 204, 204));
/*      */     this.calvesbackbtn.setText("Back");
/*      */     this.calvesbackbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.calvesbackbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.calvesbackbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.calvesbackbtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.calvesbackbtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.calvespnl.add(this.calvesbackbtn, new AbsoluteConstraints(336, 594, 110, -1));
/*      */     this.clavesworkoutlbl.setBackground(new Color(0, 0, 0));
/*      */     this.clavesworkoutlbl.setFont(new Font("Arial", 3, 24));
/*      */     this.clavesworkoutlbl.setForeground(new Color(204, 204, 204));
/*      */     this.clavesworkoutlbl.setText("Calves Workout");
/*      */     this.calvespnl.add(this.clavesworkoutlbl, new AbsoluteConstraints(340, -10, 200, 100));
/*      */     this.calvesraisesbtn.setBackground(new Color(0, 0, 0));
/*      */     this.calvesraisesbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.calvesraisesbtn.setForeground(new Color(204, 204, 204));
/*      */     this.calvesraisesbtn.setText("Calves raises");
/*      */     this.calvesraisesbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.calvesraisesbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.calvesraisesbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.calvespnl.add(this.calvesraisesbtn, new AbsoluteConstraints(40, 70, -1, -1));
/*      */     this.calvesraiseslbl.setBackground(new Color(0, 0, 0));
/*      */     this.calvesraiseslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.calvesraiseslbl.setForeground(new Color(204, 204, 204));
/*      */     this.calvesraiseslbl.setText("Difficulty : Easy");
/*      */     this.calvespnl.add(this.calvesraiseslbl, new AbsoluteConstraints(150, 110, -1, -1));
/*      */     this.frontraisesbtn.setBackground(new Color(0, 0, 0));
/*      */     this.frontraisesbtn.setFont(new Font("Arial", 0, 24));
/*      */     this.frontraisesbtn.setForeground(new Color(204, 204, 204));
/*      */     this.frontraisesbtn.setText("Front raises");
/*      */     this.frontraisesbtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.frontraisesbtn.addMouseListener(new MouseAdapter() {
/*      */           public void mouseClicked(MouseEvent evt) {
/*      */             main.this.frontraisesbtnMouseClicked(evt);
/*      */           }
/*      */         });
/*      */     this.calvespnl.add(this.frontraisesbtn, new AbsoluteConstraints(40, 180, -1, -1));
/*      */     this.frontraiseslbl.setFont(new Font("Arial", 0, 18));
/*      */     this.frontraiseslbl.setForeground(new Color(204, 204, 204));
/*      */     this.frontraiseslbl.setText("Difficulty : Easy");
/*      */     this.calvespnl.add(this.frontraiseslbl, new AbsoluteConstraints(150, 220, -1, -1));
/*      */     this.calveslastperformedtf.setEditable(false);
/*      */     this.calveslastperformedtf.setBackground(new Color(0, 0, 0));
/*      */     this.calveslastperformedtf.setFont(new Font("Arial", 0, 18));
/*      */     this.calveslastperformedtf.setForeground(new Color(204, 204, 204));
/*      */     this.calveslastperformedtf.setBorder(new SoftBevelBorder(0, Color.black, new Color(204, 204, 204), Color.black, Color.black));
/*      */     this.calveslastperformedtf.setCaretColor(new Color(204, 204, 204));
/*      */     this.calvespnl.add(this.calveslastperformedtf, new AbsoluteConstraints(620, 20, 230, -1));
/*      */     this.calvesbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/workbg.jpg"));
/*      */     this.calvesbglbl.setText("jLabel2");
/*      */     this.calvespnl.add(this.calvesbglbl, new AbsoluteConstraints(0, 10, 900, 720));
/*      */     this.workoutpnl.add(this.calvespnl, new AbsoluteConstraints(0, 0, 900, 720));
/*      */     this.defaultpnl.add(this.workoutpnl, new AbsoluteConstraints(-10, 0, -1, -1));
/*      */     this.accountpnl.setBackground(new Color(0, 0, 0));
/*      */     this.accountpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.accountpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.namelbl.setFont(new Font("Arial", 0, 24));
/*      */     this.namelbl.setForeground(new Color(153, 153, 153));
/*      */     this.namelbl.setText("Name :");
/*      */     this.accountpnl.add(this.namelbl, new AbsoluteConstraints(70, 100, 150, 40));
/*      */     this.nametf.setEditable(false);
/*      */     this.nametf.setBackground(new Color(0, 0, 0));
/*      */     this.nametf.setFont(new Font("Arial", 0, 24));
/*      */     this.nametf.setForeground(new Color(153, 153, 153));
/*      */     this.nametf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.nametf, new AbsoluteConstraints(210, 100, 150, 40));
/*      */     this.genderlbl.setFont(new Font("Arial", 0, 24));
/*      */     this.genderlbl.setForeground(new Color(153, 153, 153));
/*      */     this.genderlbl.setText("Gender :");
/*      */     this.accountpnl.add(this.genderlbl, new AbsoluteConstraints(70, 170, 150, 40));
/*      */     this.gendertf.setEditable(false);
/*      */     this.gendertf.setBackground(new Color(0, 0, 0));
/*      */     this.gendertf.setFont(new Font("Arial", 0, 24));
/*      */     this.gendertf.setForeground(new Color(153, 153, 153));
/*      */     this.gendertf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.gendertf, new AbsoluteConstraints(210, 170, 150, 40));
/*      */     this.agetf.setEditable(false);
/*      */     this.agetf.setBackground(new Color(0, 0, 0));
/*      */     this.agetf.setFont(new Font("Arial", 0, 24));
/*      */     this.agetf.setForeground(new Color(153, 153, 153));
/*      */     this.agetf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.agetf, new AbsoluteConstraints(210, 230, 150, 40));
/*      */     this.agelbl.setFont(new Font("Arial", 0, 24));
/*      */     this.agelbl.setForeground(new Color(153, 153, 153));
/*      */     this.agelbl.setText("Age :");
/*      */     this.accountpnl.add(this.agelbl, new AbsoluteConstraints(70, 230, 150, 40));
/*      */     this.weighttf.setEditable(false);
/*      */     this.weighttf.setBackground(new Color(0, 0, 0));
/*      */     this.weighttf.setFont(new Font("Arial", 0, 24));
/*      */     this.weighttf.setForeground(new Color(153, 153, 153));
/*      */     this.weighttf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.weighttf, new AbsoluteConstraints(210, 290, 150, 40));
/*      */     this.weightlbl.setFont(new Font("Arial", 0, 24));
/*      */     this.weightlbl.setForeground(new Color(153, 153, 153));
/*      */     this.weightlbl.setText("Weight :");
/*      */     this.accountpnl.add(this.weightlbl, new AbsoluteConstraints(70, 290, 150, 40));
/*      */     this.heightlbl.setFont(new Font("Arial", 0, 24));
/*      */     this.heightlbl.setForeground(new Color(153, 153, 153));
/*      */     this.heightlbl.setText("Height :");
/*      */     this.accountpnl.add(this.heightlbl, new AbsoluteConstraints(70, 350, 150, 40));
/*      */     this.deletebtn.setBackground(new Color(153, 153, 153));
/*      */     this.deletebtn.setFont(new Font("Arial", 0, 18));
/*      */     this.deletebtn.setForeground(new Color(0, 0, 0));
/*      */     this.deletebtn.setText("Delete");
/*      */     this.deletebtn.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.deletebtn.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.deletebtnActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.accountpnl.add(this.deletebtn, new AbsoluteConstraints(200, 600, 100, 40));
/*      */     this.heighttf.setEditable(false);
/*      */     this.heighttf.setBackground(new Color(0, 0, 0));
/*      */     this.heighttf.setFont(new Font("Arial", 0, 24));
/*      */     this.heighttf.setForeground(new Color(153, 153, 153));
/*      */     this.heighttf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.heighttf, new AbsoluteConstraints(210, 350, 150, 40));
/*      */     this.phntf.setEditable(false);
/*      */     this.phntf.setBackground(new Color(0, 0, 0));
/*      */     this.phntf.setFont(new Font("Arial", 0, 24));
/*      */     this.phntf.setForeground(new Color(153, 153, 153));
/*      */     this.phntf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.phntf.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.phntfActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.accountpnl.add(this.phntf, new AbsoluteConstraints(290, 410, 150, 40));
/*      */     this.phonenumlbl.setFont(new Font("Arial", 0, 24));
/*      */     this.phonenumlbl.setForeground(new Color(153, 153, 153));
/*      */     this.phonenumlbl.setText("Phone number :");
/*      */     this.accountpnl.add(this.phonenumlbl, new AbsoluteConstraints(70, 410, 210, 40));
/*      */     this.editbtn1.setBackground(new Color(153, 153, 153));
/*      */     this.editbtn1.setFont(new Font("Arial", 0, 18));
/*      */     this.editbtn1.setForeground(new Color(0, 0, 0));
/*      */     this.editbtn1.setText("Edit");
/*      */     this.editbtn1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.editbtn1.addActionListener(new ActionListener() {
/*      */           public void actionPerformed(ActionEvent evt) {
/*      */             main.this.editbtn1ActionPerformed(evt);
/*      */           }
/*      */         });
/*      */     this.accountpnl.add(this.editbtn1, new AbsoluteConstraints(350, 600, 100, 40));
/*      */     this.bmilbl.setFont(new Font("Arial", 0, 24));
/*      */     this.bmilbl.setForeground(new Color(153, 153, 153));
/*      */     this.bmilbl.setText("BMI :");
/*      */     this.accountpnl.add(this.bmilbl, new AbsoluteConstraints(70, 470, 150, 40));
/*      */     this.bmitf.setEditable(false);
/*      */     this.bmitf.setBackground(new Color(0, 0, 0));
/*      */     this.bmitf.setFont(new Font("Arial", 0, 24));
/*      */     this.bmitf.setForeground(new Color(153, 153, 153));
/*      */     this.bmitf.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accountpnl.add(this.bmitf, new AbsoluteConstraints(290, 470, 210, 40));
/*      */     this.accbglbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/account.jpg"));
/*      */     this.accbglbl.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
/*      */     this.accbglbl.setMaximumSize(new Dimension(900, 720));
/*      */     this.accbglbl.setMinimumSize(new Dimension(900, 720));
/*      */     this.accbglbl.setPreferredSize(new Dimension(900, 720));
/*      */     this.accountpnl.add(this.accbglbl, new AbsoluteConstraints(0, 0, -1, -1));
/*      */     this.defaultpnl.add(this.accountpnl, new AbsoluteConstraints(0, 0, -1, -1));
/*      */     this.aboutpnl.setBackground(new Color(0, 0, 0));
/*      */     this.aboutpnl.setMinimumSize(new Dimension(900, 720));
/*      */     this.aboutpnl.setPreferredSize(new Dimension(900, 720));
/*      */     this.aboutpnl.setLayout((LayoutManager)new AbsoluteLayout());
/*      */     this.aboutlogolbl.setBackground(new Color(0, 0, 0));
/*      */     this.aboutlogolbl.setHorizontalAlignment(0);
/*      */     this.aboutlogolbl.setIcon(new ImageIcon("/root/NetBeansProjects/Gymrat/src/gymrat/icons/biceps(1).jpg"));
/*      */     this.aboutlogolbl.setIconTextGap(0);
/*      */     this.aboutpnl.add(this.aboutlogolbl, new AbsoluteConstraints(90, 20, 700, 320));
/*      */     this.jScrollPane1.setBackground(new Color(0, 0, 0));
/*      */     this.aboutta.setEditable(false);
/*      */     this.aboutta.setBackground(new Color(0, 0, 0));
/*      */     this.aboutta.setColumns(20);
/*      */     this.aboutta.setFont(new Font("Arial", 0, 24));
/*      */     this.aboutta.setForeground(new Color(153, 153, 153));
/*      */     this.aboutta.setRows(5);
/*      */     this.aboutta.setText("Project name : GymRat Diet and Gym management 1.3\nSystem :CentOS 7 RedHat(64-bit) \nLanguage : Java 19.0.2\nIDE : Apache NetBeans 16 \n\nProject by :      Aniruddha Pandit - 32\n\tBhavesh Chaudhari - 33\n\tIshaan Nakhare - 29\n\tShreyash Kale - 70 ");
/*      */     this.aboutta.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
/*      */     this.jScrollPane1.setViewportView(this.aboutta);
/*      */     this.aboutpnl.add(this.jScrollPane1, new AbsoluteConstraints(120, 370, 660, 270));
/*      */     this.defaultpnl.add(this.aboutpnl, new AbsoluteConstraints(0, 0, -1, -1));
/*      */     getContentPane().add(this.defaultpnl, new AbsoluteConstraints(186, 0, 900, 720));
/*      */     pack();
/*      */     setLocationRelativeTo(null);
/*      */   }
/*      */   
/*      */   private void phntfActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void accountbtnMouseClicked(MouseEvent evt) {
/*      */     this.homepnl.setVisible(false);
/*      */     this.accountpnl.setVisible(true);
/*      */     this.dietpnl.setVisible(false);
/*      */     this.aboutpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void aboutbtnMouseClicked(MouseEvent evt) {
/*      */     this.homepnl.setVisible(false);
/*      */     this.accountpnl.setVisible(false);
/*      */     this.aboutpnl.setVisible(true);
/*      */     this.dietpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void accountbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from customer where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         if (rs.getString(6) == null) {
/*      */           this.nametf.setText(rs.getString(1));
/*      */           this.weighttf.setText("Weight in kg");
/*      */           this.heighttf.setText("Hieght in cm");
/*      */           this.agetf.setText(rs.getString(2));
/*      */           this.phntf.setText(rs.getString(5));
/*      */           this.gendertf.setText(rs.getString(3));
/*      */           this.bmilbl.setVisible(false);
/*      */           this.bmitf.setVisible(false);
/*      */         } else {
/*      */           this.nametf.setText(rs.getString(1));
/*      */           this.weighttf.setText(rs.getString(6) + "  kg");
/*      */           this.heighttf.setText(rs.getString(7) + "  cm");
/*      */           this.agetf.setText(rs.getString(2));
/*      */           this.phntf.setText(rs.getString(5));
/*      */           this.gendertf.setText(rs.getString(3));
/*      */           String w = rs.getString(6);
/*      */           float h = Float.parseFloat(rs.getString(7));
/*      */           h /= 100.0F;
/*      */           DecimalFormat df = new DecimalFormat("0.00");
/*      */           double bmi = Integer.parseInt(w) / Math.pow(h, 2.0D);
/*      */           if (bmi <= 18.4D) {
/*      */             this.bmitf.setText(df.format(bmi) + " Underweight");
/*      */           } else if (bmi > 18.5D && bmi < 25.9D) {
/*      */             this.bmitf.setText(df.format(bmi) + " Normal");
/*      */           } else if (bmi > 25.0D && bmi < 39.9D) {
/*      */             this.bmitf.setText(df.format(bmi) + " Overweight");
/*      */           } else if (bmi >= 40.0D) {
/*      */             this.bmitf.setText(df.format(bmi) + " Obese");
/*      */           } 
/*      */         } 
/*      */       } else {
/*      */         JOptionPane.showMessageDialog(this, "Please Register yourself!!");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void homebtnMouseClicked(MouseEvent evt) {
/*      */     this.homepnl.setVisible(true);
/*      */     this.accountpnl.setVisible(false);
/*      */     this.dietpnl.setVisible(false);
/*      */     this.aboutpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void editbtn1ActionPerformed(ActionEvent evt) {
/*      */     (new update(this.name)).setVisible(true);
/*      */     dispose();
/*      */   }
/*      */   
/*      */   private void deletebtnActionPerformed(ActionEvent evt) {
/*      */     deleteworkout(this.name);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int rs = stmt.executeUpdate("delete from  customer  where name='" + this.name + "'");
/*      */       if (rs == 1) {
/*      */         JOptionPane.showMessageDialog(this,"Successfully Deleted");
/*      */       } else {
/*      */         System.out.println("Unsuccessfully Deletion");
/*      */       } 
/*      */       (new login()).setVisible(true);
/*      */       dispose();
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void deleteworkout(String n) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int rs = stmt.executeUpdate("delete from  workout  where name='" + this.name + "'");
/*      */       if (rs == 1) {
/*      */         System.out.println("Successfully Deleted");
/*      */       } else {
/*      */         System.out.println("Unsuccessfully Deletion");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dietbtnMouseClicked(MouseEvent evt) {
/*      */     this.homepnl.setVisible(false);
/*      */     this.accountpnl.setVisible(false);
/*      */     this.dietpnl.setVisible(true);
/*      */     this.aboutpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void homebtnActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void dietbtnActionPerformed(ActionEvent evt) {
/*      */     this.wmtip1scrl.setVisible(false);
/*      */     this.wmtip2scrl.setVisible(false);
/*      */     this.wmtip3scrl.setVisible(false);
/*      */     this.wmtip4scrl.setVisible(false);
/*      */     this.wmtip5scrl.setVisible(false);
/*      */     this.wmtip6scrl.setVisible(false);
/*      */     this.wmtip7scrl.setVisible(false);
/*      */     this.wmtip8scrl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void logoutlblMouseClicked(MouseEvent evt) {}
/*      */   
/*      */   private void logoutlblActionPerformed(ActionEvent evt) {
/*      */     (new login()).setVisible(true);
/*      */     dispose();
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int rs = stmt.executeUpdate("update customer SET last_login = CURRENT_TIMESTAMP(0)::TIMESTAMP  where name='" + this.name + "'");
/*      */       if (rs == 1) {
/*      */         System.out.println("Successfully Logout");
/*      */       } else {
/*      */         System.out.println("Unsuccessfully logout");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void aboutbtnActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void weightlossbtnActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void weightlossbtnMouseClicked(MouseEvent evt) {
/*      */     this.weightlosspnl.setVisible(true);
/*      */     this.weightmainpnl.setVisible(false);
/*      */     this.weightgainpnl.setVisible(false);
/*      */     Random r = new Random();
/*      */     int no = r.nextInt(9);
/*      */     System.out.println(no);
/*      */     if (this.num != no) {
/*      */       if (no == 0) {
/*      */         this.wltip1scrl.setVisible(true);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 1) {
/*      */         this.wltip2scrl.setVisible(true);
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 2) {
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(true);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 3) {
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(true);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 4) {
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(true);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 5) {
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(true);
/*      */         this.wltip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 6) {
/*      */         this.wltip1scrl.setVisible(false);
/*      */         this.wltip2scrl.setVisible(false);
/*      */         this.wltip3scrl.setVisible(false);
/*      */         this.wltip4scrl.setVisible(false);
/*      */         this.wltip5scrl.setVisible(false);
/*      */         this.wltip6scrl.setVisible(false);
/*      */         this.wltip7scrl.setVisible(false);
/*      */         this.wltip8scrl.setVisible(true);
/*      */         this.num = no;
/*      */       } 
/*      */     } else {
/*      */       this.wltip2scrl.setVisible(false);
/*      */       this.wltip1scrl.setVisible(false);
/*      */       this.wltip3scrl.setVisible(true);
/*      */       this.wltip4scrl.setVisible(false);
/*      */       this.wltip5scrl.setVisible(false);
/*      */       this.wltip6scrl.setVisible(false);
/*      */       this.wltip7scrl.setVisible(false);
/*      */       this.wltip8scrl.setVisible(false);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dietbarpnlMouseClicked(MouseEvent evt) {}
/*      */   
/*      */   private void weightmaintainbtnMouseClicked(MouseEvent evt) {
/*      */     this.weightlosspnl.setVisible(false);
/*      */     this.weightmainpnl.setVisible(true);
/*      */     this.weightgainpnl.setVisible(false);
/*      */     Random r = new Random();
/*      */     int no = r.nextInt(9);
/*      */     System.out.println(no);
/*      */     if (this.num != no) {
/*      */       if (no == 0) {
/*      */         this.wmtip1scrl.setVisible(true);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 1) {
/*      */         this.wmtip2scrl.setVisible(true);
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 2) {
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(true);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 3) {
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(true);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 4) {
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(true);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 5) {
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(true);
/*      */         this.wmtip8scrl.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 6) {
/*      */         this.wmtip1scrl.setVisible(false);
/*      */         this.wmtip2scrl.setVisible(false);
/*      */         this.wmtip3scrl.setVisible(false);
/*      */         this.wmtip4scrl.setVisible(false);
/*      */         this.wmtip5scrl.setVisible(false);
/*      */         this.wmtip6scrl.setVisible(false);
/*      */         this.wmtip7scrl.setVisible(false);
/*      */         this.wmtip8scrl.setVisible(true);
/*      */         this.num = no;
/*      */       } 
/*      */     } else {
/*      */       this.wmtip2scrl.setVisible(false);
/*      */       this.wmtip1scrl.setVisible(false);
/*      */       this.wmtip3scrl.setVisible(true);
/*      */       this.wmtip4scrl.setVisible(false);
/*      */       this.wmtip5scrl.setVisible(false);
/*      */       this.wmtip6scrl.setVisible(false);
/*      */       this.wmtip7scrl.setVisible(false);
/*      */       this.wmtip8scrl.setVisible(false);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void weightmaintainbtnActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void weightgainbtnMouseClicked(MouseEvent evt) {
/*      */     this.weightlosspnl.setVisible(false);
/*      */     this.weightmainpnl.setVisible(false);
/*      */     this.weightgainpnl.setVisible(true);
/*      */     Random r = new Random();
/*      */     int no = r.nextInt(9);
/*      */     System.out.println(no);
/*      */     if (this.num != no) {
/*      */       if (no == 0) {
/*      */         this.wmtip1scrl1.setVisible(true);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 1) {
/*      */         this.wmtip2scrl1.setVisible(true);
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 2) {
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(true);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 3) {
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(true);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 4) {
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(true);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 5) {
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(true);
/*      */         this.wmtip8scrl1.setVisible(false);
/*      */         this.num = no;
/*      */       } else if (no == 6) {
/*      */         this.wmtip1scrl1.setVisible(false);
/*      */         this.wmtip2scrl1.setVisible(false);
/*      */         this.wmtip3scrl1.setVisible(false);
/*      */         this.wmtip4scrl1.setVisible(false);
/*      */         this.wmtip5scrl1.setVisible(false);
/*      */         this.wmtip6scrl1.setVisible(false);
/*      */         this.wmtip7scrl1.setVisible(false);
/*      */         this.wmtip8scrl1.setVisible(true);
/*      */         this.num = no;
/*      */       } 
/*      */     } else {
/*      */       this.wmtip2scrl1.setVisible(false);
/*      */       this.wmtip1scrl1.setVisible(false);
/*      */       this.wmtip3scrl1.setVisible(true);
/*      */       this.wmtip4scrl1.setVisible(false);
/*      */       this.wmtip5scrl1.setVisible(false);
/*      */       this.wmtip6scrl1.setVisible(false);
/*      */       this.wmtip7scrl1.setVisible(false);
/*      */       this.wmtip8scrl1.setVisible(false);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bgiconlblInputMethodTextChanged(InputMethodEvent evt) {}
/*      */   
/*      */   private void workoutbtnMouseClicked(MouseEvent evt) {
/*      */     this.homepnl.setVisible(false);
/*      */     this.accountpnl.setVisible(false);
/*      */     this.dietpnl.setVisible(false);
/*      */     this.aboutpnl.setVisible(false);
/*      */     this.workoutpnl.setVisible(true);
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void backbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(true);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void bicepsbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(true);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void tricepsbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(true);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void chestbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(true);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void shouldersbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(true);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void forearmsbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(true);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void quadsbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(true);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void hamstringsMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(true);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void calvesbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(true);
/*      */     this.abspnl.setVisible(false);
/*      */   }
/*      */   
/*      */   private void absbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(false);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(true);
/*      */   }
/*      */   
/*      */   private void backbtnActionPerformed(ActionEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(back_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.lastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.lastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bicepsbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working!!");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bicepsbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Biceps";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET biceps_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void backbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void chestbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void shoulderbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void forearmbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void quadsbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void hamsbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void calvesbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void absbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void tricepsbackbtnMouseClicked(MouseEvent evt) {
/*      */     this.hmpnl.setVisible(true);
/*      */     this.backpnl.setVisible(false);
/*      */     this.bicepspnl.setVisible(false);
/*      */     this.chestpnl.setVisible(false);
/*      */     this.tricepspnl.setVisible(false);
/*      */     this.forearmspnl.setVisible(false);
/*      */     this.shoulderpnl.setVisible(false);
/*      */     this.quadspnl.setVisible(false);
/*      */     this.hamspnl.setVisible(false);
/*      */     this.calvespnl.setVisible(false);
/*      */     this.abspnl.setVisible(false);
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dumbellrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/dumbellrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void pullupsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/pullup.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void deadliftbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/deadlift.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void seatedrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/settedrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void latpulldownbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/latpull.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void tbarrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/tbarrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bentrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Back/bentoverbarrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void landminebtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Chest/landmine.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void cableflybtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Chest/cableflyers.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dumbellpressbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Chest/dumbbellpress.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void inclinepressbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Chest/inclinepress.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void chestdipsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Chest/chestdips.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void lankbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Abs/Plank.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void closegripMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/closegripbenchpress.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dipsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/dips.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void dubbellkickbackbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/kickback.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void frenchcurlbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/frenchcurl.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void revercegripbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/reversegrip.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void skullcrusherbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/skullcrusher.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void triceppushdownbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Triceps/triceppushdown.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bulgariansplitsquadbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Quads/bulgariasquat.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void barbellhighrowActionPerformed(ActionEvent evt) {}
/*      */   
/*      */   private void frontsquatbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Quads/frontsquat.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void legextensionbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Quads/legextension.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void machinepressbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Quads/machinepress.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void squatsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Quads/sqauts.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void barbellhighrowMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/barbellhoghrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void facepullsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/facepulls.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void inclinedumbbellhighrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/inclinedumbbellhighrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void KnellingcabellatpulldobtnwnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/knellingcablelatpulldown.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void LongangledumbbellrowbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/longangledubbellrow.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void weightedskydiverbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Shoulders/weightedskydiver.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void calvesraisesbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Calves/calvesraises.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void frontraisesbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Calves/frontraises.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void backbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Back";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET back_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void chestbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Chest";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET chest_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void tricepsbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Triceps";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET tricep_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void shoulderbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Shoulders";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET shoulders_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void forearmbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Forearms";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET forearms_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void quadsbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Quads";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET quads_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void hamsbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Hamstrings";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET hamstrings_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void absbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Abs";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET abs_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void calvesbackbtnActionPerformed(ActionEvent evt) {
/*      */     String workout = "Calves";
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       int i = stmt.executeUpdate("update workout SET calves_workout = CURRENT_TIMESTAMP(0)::TIMESTAMP,last_workout = '" + workout + "'  where name='" + this.name + "'");
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void workoutbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select * from workout  where name='" + this.name + "'");
/*      */       if (rs.next()) {
/*      */         this.setworktf.setText(rs.getString(12));
/*      */       } else {
/*      */         System.out.println("Not working");
/*      */       } 
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void bicepbglblMouseClicked(MouseEvent evt) {}
/*      */   
/*      */   private void bicepsbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(biceps_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.lastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.bilastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void shouldersbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(shoulders_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.slastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.slastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void chestbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(chest_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.clastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.clastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void tricepsbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(tricep_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.tlastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.tlastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void forearmsbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(forearms_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.flastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.flastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void quadsbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(quads_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.qlastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.qlastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void hamstringsActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(hamstrings_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.hlastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.hlastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void calvesbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(calves_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.calveslastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.calveslastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void absbtnActionPerformed(ActionEvent evt) {
/*      */     try {
/*      */       Class.forName("org.postgresql.Driver");
/*      */       Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/project", "postgres", "Turbotime");
/*      */       Statement stmt = con.createStatement();
/*      */       ResultSet rs = stmt.executeQuery("select TO_CHAR(abs_workout,'DD/MM/YYYY') from workout where name='" + this.name + "'");
/*      */       if (rs.next())
/*      */         if (null == rs.getString(1)) {
/*      */           this.alastperformedtf.setText("Not Performed");
/*      */         } else {
/*      */           this.alastperformedtf.setText("Last Session:" + rs.getString(1));
/*      */         }  
/*      */     } catch (Exception e) {
/*      */       System.out.println(e);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void FarmerswalkbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Forearms/farmerswalk.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void jButton10MouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Forearms/wristroller.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void siitedlegpushbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Hamstring/sittedlegpush.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void standinghamstringsbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Hamstring/standinghamstring.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void stifflegliftbtnMouseClicked(MouseEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Hamstring/stiffleglift.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void jackknivesbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Abs/jackknives.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void chinupbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Biceps/chinups.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void concurlsActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Biceps/con.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void inclinedumbbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Biceps/incline.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   private void reversebarbtnActionPerformed(ActionEvent evt) {
/*      */     Runtime runTime = Runtime.getRuntime();
/*      */     String[] s = { "/usr/bin/smplayer", "/root/NetBeansProjects/Gymrat/src/gymrat/Videos/Biceps/reverse.mp4" };
/*      */     try {
/*      */       runTime.exec(s);
/*      */     } catch (IOException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */   }
/*      */   
/*      */   public static void main(String[] args) {
/*      */     try {
/*      */       for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
/*      */         if ("Nimbus".equals(info.getName())) {
/*      */           UIManager.setLookAndFeel(info.getClassName());
/*      */           break;
/*      */         } 
/*      */       } 
/*      */     } catch (ClassNotFoundException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } catch (InstantiationException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } catch (IllegalAccessException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } catch (UnsupportedLookAndFeelException ex) {
/*      */       Logger.getLogger(main.class.getName()).log(Level.SEVERE, (String)null, ex);
/*      */     } 
/*      */     EventQueue.invokeLater(new Runnable() {
/*      */           public void run() {
/*      */             (new main()).setVisible(true);
/*      */           }
/*      */         });
/*      */   }
/*      */ }


/* Location:              C:\Users\pandi\OneDrive\Desktop\Gymrat.jar!\gymrat\main.class
 * Java compiler version: 11 (55.0)
 * JD-Core Version:       1.1.3
 */